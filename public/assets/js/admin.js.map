{"version":3,"sources":["admin.module.js","admin.routes.js","services/asset-tag.service.js","services/asset.service.js","services/department.service.js","services/user.service.js","controllers/main/barcode-dialog.js","controllers/main/left-sidenav.controller.js","controllers/main/main-content-container.controller.js","controllers/main/main-content.controller.js","controllers/main/main-right-sidenav.controller.js","controllers/main/main-toolbar.controller.js","controllers/main/main-view.controller.js","controllers/main/toolbar.controller.js","controllers/department/add-employee-dialog.controller.js","controllers/department/department-content-container.controller.js","controllers/department/department-toolbar.controller.js","controllers/department/show-employee-dialog.controller.js","controllers/assets/hard-disk/add-hard-disk-dialog.controller.js","controllers/assets/hard-disk/hard-disk-content-container.controller.js","controllers/assets/hard-disk/hard-disk-toolbar.controller.js","controllers/assets/hard-disk/hard-disk-unit-content-container.controller.js","controllers/assets/hard-disk/hard-disk-unit-right-sidenav.controller.js","controllers/assets/hard-disk/hard-disk-unit-toolbar.controller.js","controllers/assets/firewall/add-firewall-dialog.controller.js","controllers/assets/firewall/firewall-content-container.controller.js","controllers/assets/firewall/firewall-toolbar.controller.js","controllers/assets/firewall/firewall-unit-content-container.controller.js","controllers/assets/firewall/firewall-unit-right-sidenav.controller.js","controllers/assets/firewall/firewall-unit-toolbar.controller.js","controllers/assets/headset/add-headset-dialog.controller.js","controllers/assets/headset/headset-content-container.controller.js","controllers/assets/headset/headset-toolbar.controller.js","controllers/assets/headset/headset-unit-content-container.controller.js","controllers/assets/headset/headset-unit-right-sidenav.controller.js","controllers/assets/headset/headset-unit-toolbar.controller.js","controllers/assets/cpu/add-cpu-dialog.controller.js","controllers/assets/cpu/cpu-content-container.controller.js","controllers/assets/cpu/cpu-content.controller.js","controllers/assets/cpu/cpu-right-sidenav.controller.js","controllers/assets/cpu/cpu-toolbar.controller.js","controllers/assets/cpu/cpu-unit-content-container.controller.js","controllers/assets/cpu/cpu-unit-content.controller.js","controllers/assets/cpu/cpu-unit-right-sidenav.controller.js","controllers/assets/cpu/cpu-unit-toolbar.controller.js","controllers/assets/mac/add-mac-dialog.controller.js","controllers/assets/mac/mac-content-container.controller.js","controllers/assets/mac/mac-toolbar.controller.js","controllers/assets/mac/mac-unit-content-container.controller.js","controllers/assets/mac/mac-unit-right-sidenav.controller.js","controllers/assets/mac/mac-unit-toolbar.controller.js","controllers/assets/keyboard/add-keyboard-dialog.controller.js","controllers/assets/keyboard/keyboard-content-container.controller.js","controllers/assets/keyboard/keyboard-toolbar.controller.js","controllers/assets/keyboard/keyboard-unit-content-container.controller.js","controllers/assets/keyboard/keyboard-unit-right-sidenav.controller.js","controllers/assets/keyboard/keyboard-unit-toolbar.controller.js","controllers/assets/monitor/add-monitor-dialog.controller.js","controllers/assets/monitor/monitor-content-container.controller.js","controllers/assets/monitor/monitor-toolbar.controller.js","controllers/assets/monitor/monitor-unit-content-container.controller.js","controllers/assets/monitor/monitor-unit-right-sidenav.controller.js","controllers/assets/monitor/monitor-unit-toolbar.controller.js","controllers/assets/memory/add-memory-dialog.controller.js","controllers/assets/memory/memory-content-container.controller.js","controllers/assets/memory/memory-toolbar.controller.js","controllers/assets/memory/memory-unit-content-container.controller.js","controllers/assets/memory/memory-unit-right-sidenav.controller.js","controllers/assets/memory/memory-unit-toolbar.controller.js","controllers/assets/mouse/add-mouse-dialog.controller.js","controllers/assets/mouse/mouse-content-container.controller.js","controllers/assets/mouse/mouse-toolbar.controller.js","controllers/assets/mouse/mouse-unit-content-container.controller.js","controllers/assets/mouse/mouse-unit-right-sidenav.controller.js","controllers/assets/mouse/mouse-unit-toolbar.controller.js","controllers/assets/network-switch/add-network-switch-dialog.controller.js","controllers/assets/network-switch/network-switch-content-container.controller.js","controllers/assets/network-switch/network-switch-toolbar.controller.js","controllers/assets/network-switch/network-switch-unit-content-container.controller.js","controllers/assets/network-switch/network-switch-unit-right-sidenav.controller.js","controllers/assets/network-switch/network-switch-unit-toolbar.controller.js","controllers/assets/portable-hard-disk/add-portable-hard-disk-dialog.controller.js","controllers/assets/portable-hard-disk/portable-hard-disk-content-container.controller.js","controllers/assets/portable-hard-disk/portable-hard-disk-toolbar.controller.js","controllers/assets/portable-hard-disk/portable-hard-disk-unit-content-container.controller.js","controllers/assets/portable-hard-disk/portable-hard-disk-unit-right-sidenav.controller.js","controllers/assets/portable-hard-disk/portable-hard-disk-unit-toolbar.controller.js","controllers/assets/other-component/add-other-component-dialog.controller.js","controllers/assets/other-component/other-component-content-container.controller.js","controllers/assets/other-component/other-component-toolbar.controller.js","controllers/assets/other-component/other-component-unit-content-container.controller.js","controllers/assets/other-component/other-component-unit-right-sidenav.controller.js","controllers/assets/other-component/other-component-unit-toolbar.controller.js","controllers/assets/printer/add-printer-dialog.controller.js","controllers/assets/printer/printer-content-container.controller.js","controllers/assets/printer/printer-toolbar.controller.js","controllers/assets/printer/printer-unit-content-container.controller.js","controllers/assets/printer/printer-unit-right-sidenav.controller.js","controllers/assets/printer/printer-unit-toolbar.controller.js","controllers/assets/router/add-router-dialog.controller.js","controllers/assets/router/router-content-container.controller.js","controllers/assets/router/router-toolbar.controller.js","controllers/assets/router/router-unit-content-container.controller.js","controllers/assets/router/router-unit-right-sidenav.controller.js","controllers/assets/router/router-unit-toolbar.controller.js","controllers/assets/projector/add-projector-dialog.controller.js","controllers/assets/projector/projector-content-container.controller.js","controllers/assets/projector/projector-toolbar.controller.js","controllers/assets/projector/projector-unit-content-container.controller.js","controllers/assets/projector/projector-unit-right-sidenav.controller.js","controllers/assets/projector/projector-unit-toolbar.controller.js","controllers/assets/speaker/add-speaker-dialog.controller.js","controllers/assets/speaker/speaker-content-container.controller.js","controllers/assets/speaker/speaker-toolbar.controller.js","controllers/assets/speaker/speaker-unit-content-container.controller.js","controllers/assets/speaker/speaker-unit-right-sidenav.controller.js","controllers/assets/speaker/speaker-unit-toolbar.controller.js","controllers/assets/scanner/add-scanner-dialog.controller.js","controllers/assets/scanner/scanner-content-container.controller.js","controllers/assets/scanner/scanner-toolbar.controller.js","controllers/assets/scanner/scanner-unit-content-container.controller.js","controllers/assets/scanner/scanner-unit-right-sidenav.controller.js","controllers/assets/scanner/scanner-unit-toolbar.controller.js","controllers/assets/software/add-software-dialog.controller.js","controllers/assets/software/software-content-container.controller.js","controllers/assets/software/software-toolbar.controller.js","controllers/assets/software/software-unit-content-container.controller.js","controllers/assets/software/software-unit-right-sidenav.controller.js","controllers/assets/software/software-unit-toolbar.controller.js","controllers/dashboard/floor-plan/add-work-station-dialog.controller.js","controllers/dashboard/floor-plan/floor-plan-content-container.controller.js","controllers/dashboard/floor-plan/floor-plan-content.controller.js","controllers/dashboard/floor-plan/floor-plan-right-sidenav.controller.js","controllers/dashboard/floor-plan/floor-plan-toolbar.controller.js","controllers/dashboard/floor-plan/tag-work-station-dialog.controller.js","controllers/assets/video-card/add-video-card-dialog.controller.js","controllers/assets/video-card/video-card-content-container.controller.js","controllers/assets/video-card/video-card-content.controller.js","controllers/assets/video-card/video-card-right-sidenav.controller.js","controllers/assets/video-card/video-card-toolbar.controller.js","controllers/assets/video-card/video-card-unit-content-container.controller.js","controllers/assets/video-card/video-card-unit-right-sidenav.controller.js","controllers/assets/video-card/video-card-unit-toolbar.controller.js","controllers/assets/ups/add-ups-dialog.controller.js","controllers/assets/ups/ups-content-container.controller.js","controllers/assets/ups/ups-content.controller.js","controllers/assets/ups/ups-right-sidenav.controller.js","controllers/assets/ups/ups-toolbar.controller.js","controllers/assets/ups/ups-unit-content-container.controller.js","controllers/assets/ups/ups-unit-right-sidenav.controller.js","controllers/assets/ups/ups-unit-toolbar.controller.js","controllers/assets/telephone/add-telephone-dialog.controller.js","controllers/assets/telephone/telephone-content-container.controller.js","controllers/assets/telephone/telephone-toolbar.controller.js","controllers/assets/telephone/telephone-unit-content-container.controller.js","controllers/assets/telephone/telephone-unit-right-sidenav.controller.js","controllers/assets/telephone/telephone-unit-toolbar.controller.js","controllers/dashboard/analysis/analysis-content.controller.js","controllers/dashboard/analysis/analysis-right-sidenav.controller.js","controllers/dashboard/analysis/analysis-toolbar.controller.js","controllers/dashboard/floor-plan/work-station/add-asset-dialog.controller.js","controllers/dashboard/floor-plan/work-station/add-asset-tag-dialog.controller.js","controllers/dashboard/floor-plan/work-station/edit-asset-dialog.controller.js","controllers/dashboard/floor-plan/work-station/edit-work-station-dialog.controller.js","controllers/dashboard/floor-plan/work-station/pull-out-asset-dialog.controller.js","controllers/dashboard/floor-plan/work-station/swap-asset-dialog.controller.js","controllers/dashboard/floor-plan/work-station/tag-users-work-station-dialog.controller.js","controllers/dashboard/floor-plan/work-station/transfer-asset-dialog.controller.js","controllers/dashboard/floor-plan/work-station/transfer-users-dialog.controller.js","controllers/dashboard/floor-plan/work-station/users-work-station-dialog.controller.js","controllers/dashboard/floor-plan/work-station/work-station-content-container.controller.js","controllers/dashboard/floor-plan/work-station/work-station-content.controller.js","controllers/dashboard/floor-plan/work-station/work-station-right-sidenav.controller.js","controllers/dashboard/floor-plan/work-station/work-station-toolbar.controller.js"],"names":[],"mappingspQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzxbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdzRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvhJA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnlTA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACldzRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdhdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpjQA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9IA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvdhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxrblrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"admin.js","sourcesContent":["var adminModule = angular.module('adminModule', [\r\n\t/* Shared Module */\r\n\t'sharedModule',\r\n]);","adminModule\r\n\t.config(['$stateProvider', '$mdDateLocaleProvider',  function($stateProvider, $mdDateLocaleProvider){\r\n\t\t$mdDateLocaleProvider.formatDate = function(date) {\r\n\t\t    return moment(date).format('L');\r\n\t\t};\r\n\t\t$stateProvider\r\n\t\t\t/**\r\n\t\t\t * Home Route\r\n\t\t\t * Tutorial Page\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\t.state('main', {\r\n\t\t\t\turl: '/',\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/views/main.view.html',\r\n\t\t\t\t\t\tcontroller: 'mainViewController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'left-sidenav@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/sidenavs/main-left.sidenav.html',\r\n\t\t\t\t\t\tcontroller: 'leftSidenavController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/toolbar.template.html',\r\n\t\t\t\t\t\tcontroller: 'mainToolbarController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content-container@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/views/content-container.view.html',\r\n\t\t\t\t\t\tcontroller: 'mainContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/content/main.content.template.html',\r\n\t\t\t\t\t\t// controller: 'mainContentController',\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'right-sidenav@main': {\r\n\t\t\t\t\t\ttemplateUrl : '/app/components/admin/templates/sidenavs/logs-right.sidenav.html',\r\n\t\t\t\t\t\tcontroller: 'mainRightSidenavController',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tonExit: ['$mdSidenav', function($mdSidenav){\r\n\t\t\t\t\tvar leftSidenav = $('[md-component-id=\"left\"]');\r\n\t\t\t\t\tif(leftSidenav.hasClass('md-closed') && leftSidenav.hasClass('md-locked-open')){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$mdSidenav('left').toggle();\r\n\t\t\t\t}],\r\n\t\t\t})\r\n\t\t\t/**\r\n\t\t\t * Dashboard Routes\r\n\t\t\t * \r\n\t\t\t*/\r\n\r\n\t\t\t/**\r\n\t\t\t * Displays charts of inventory\r\n\t\t\t * \r\n\t\t\t*/\r\n\t\t\t.state('main.analysis', {\r\n\t\t\t\turl: 'dashboard/analysis',\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'toolbar': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/toolbar.template.html',\r\n\t\t\t\t\t\tcontroller: 'analysisToolbarController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/content/analysis.content.template.html',\r\n\t\t\t\t\t\tcontroller: 'analysisContentController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'right-sidenav': {\r\n\t\t\t\t\t\ttemplateUrl : '/app/components/admin/templates/sidenavs/main-right.sidenav.html',\r\n\t\t\t\t\t\tcontroller: 'analysisRightSidenavController',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tonExit: ['$mdSidenav', function($mdSidenav){\r\n\t\t\t\t\tvar leftSidenav = $('[md-component-id=\"left\"]');\r\n\t\t\t\t\tif(leftSidenav.hasClass('md-closed') && leftSidenav.hasClass('md-locked-open')){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$mdSidenav('left').toggle();\r\n\t\t\t\t}],\r\n\t\t\t})\r\n\t\t\t/**\r\n\t\t\t * Displays floor plan of the building\r\n\t\t\t * \r\n\t\t\t*/\r\n\t\t\t.state('main.floor-plan', {\r\n\t\t\t\turl: 'dashboard/floor-plan/{departmentID}',\r\n\t\t\t\tparams: {'departmentID': null},\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'content-container': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/views/content-container.view.html',\r\n\t\t\t\t\t\tcontroller: 'floorPlanContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main.floor-plan': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/toolbar.template.html',\r\n\t\t\t\t\t\tcontroller: 'floorPlanToolbarController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main.floor-plan': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/content/floor-plan.content.template.html',\r\n\t\t\t\t\t\t// controller: 'floorPlanContentController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'right-sidenav@main.floor-plan': {\r\n\t\t\t\t\t\ttemplateUrl : '/app/components/admin/templates/sidenavs/main-right.sidenav.html',\r\n\t\t\t\t\t\tcontroller: 'floorPlanRightSidenavController',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tonExit: ['$mdSidenav', function($mdSidenav){\r\n\t\t\t\t\tvar leftSidenav = $('[md-component-id=\"left\"]');\r\n\t\t\t\t\tif(leftSidenav.hasClass('md-closed') && leftSidenav.hasClass('md-locked-open')){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$mdSidenav('left').toggle();\r\n\t\t\t\t}],\r\n\t\t\t})\r\n\t\t\t/**\r\n\t\t\t * Display Work Station\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\t.state('main.work-station', {\r\n\t\t\t\turl: 'dashboard/floor-plan/{departmentID}/work-station/{workStationID}',\r\n\t\t\t\tparams: {'departmentID':null, 'workStationID': null},\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'content-container': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/views/content-container.view.html',\r\n\t\t\t\t\t\tcontroller: 'workStationContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main.work-station': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/toolbar.template.html',\r\n\t\t\t\t\t\tcontroller: 'workStationToolbarController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main.work-station': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/content/work-station.content.template.html',\r\n\t\t\t\t\t\t// controller: 'workStationContentController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'right-sidenav@main.work-station': {\r\n\t\t\t\t\t\ttemplateUrl : '/app/components/admin/templates/sidenavs/work-station-right.sidenav.html',\r\n\t\t\t\t\t\tcontroller: 'workStationRightSidenavController',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tonExit: ['$mdSidenav', function($mdSidenav){\r\n\t\t\t\t\tvar leftSidenav = $('[md-component-id=\"left\"]');\r\n\t\t\t\t\tif(leftSidenav.hasClass('md-closed') && leftSidenav.hasClass('md-locked-open')){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$mdSidenav('left').toggle();\r\n\t\t\t\t}],\r\n\t\t\t})\r\n\r\n\t\t\t/**\r\n\t\t\t * Assets Routes\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\t.state('main.assets', {\r\n\t\t\t\turl: 'assets/{assetID}',\r\n\t\t\t\tparams: {'assetID':null},\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'content-container': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/views/content-container.view.html',\r\n\t\t\t\t\t\tcontrollerProvider: ['$stateParams', 'assetService', function($stateParams, assetService){\r\n\t\t\t\t\t\t\tvar index = $stateParams.assetID - 1;\r\n\t\t\t\t\t\t\treturn assetService.contentContainerController(index);\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main.assets': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/toolbar.template.html',\r\n\t\t\t\t\t\tcontrollerProvider: ['$stateParams', 'assetService', function($stateParams, assetService){\r\n\t\t\t\t\t\t\tvar index = $stateParams.assetID - 1;\r\n\t\t\t\t\t\t\treturn assetService.toolbarController(index);\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main.assets': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/content/assets.content.template.html',\r\n\t\t\t\t\t\t// controllerProvider: ['$stateParams', 'assetService', function($stateParams, assetService){\r\n\t\t\t\t\t\t// \tvar index = $stateParams.assetID - 1;\r\n\t\t\t\t\t\t// \treturn assetService.contentController(index);\r\n\t\t\t\t\t\t// }]\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tonExit: ['$mdSidenav', function($mdSidenav){\r\n\t\t\t\t\tvar leftSidenav = $('[md-component-id=\"left\"]');\r\n\t\t\t\t\tif(leftSidenav.hasClass('md-closed') && leftSidenav.hasClass('md-locked-open')){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$mdSidenav('left').toggle();\r\n\t\t\t\t}],\r\n\t\t\t})\r\n\t\t\t/**\r\n\t\t\t * Unit Routes\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\t.state('main.units', {\r\n\t\t\t\turl: 'assets/{assetID}/item/{unitID}',\r\n\t\t\t\tparams: {'assetID':null, 'unitID':null},\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'content-container': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/views/content-container.view.html',\r\n\t\t\t\t\t\tcontrollerProvider: ['$stateParams', 'assetService', function($stateParams, assetService){\r\n\t\t\t\t\t\t\tvar index = $stateParams.assetID - 1;\r\n\t\t\t\t\t\t\treturn assetService.unitContentContainerController(index);\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main.units': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/toolbar.template.html',\r\n\t\t\t\t\t\tcontrollerProvider: ['$stateParams', 'assetService', function($stateParams, assetService){\r\n\t\t\t\t\t\t\tvar index = $stateParams.assetID - 1;\r\n\t\t\t\t\t\t\treturn assetService.unitToolbarController(index);\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main.units': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/content/assets-unit.content.template.html',\r\n\t\t\t\t\t\t// controllerProvider: ['$stateParams', 'assetService', function($stateParams, assetService){\r\n\t\t\t\t\t\t// \tvar index = $stateParams.assetID - 1;\r\n\t\t\t\t\t\t// \treturn assetService.unitContentController(index);\r\n\t\t\t\t\t\t// }]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'right-sidenav@main.units': {\r\n\t\t\t\t\t\ttemplateUrl : '/app/components/admin/templates/sidenavs/unit-right.sidenav.html',\r\n\t\t\t\t\t\tcontrollerProvider: ['$stateParams', 'assetService', function($stateParams, assetService){\r\n\t\t\t\t\t\t\tvar index = $stateParams.assetID - 1;\r\n\t\t\t\t\t\t\treturn assetService.unitRightSidenavController(index);\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tonExit: ['$mdSidenav', function($mdSidenav){\r\n\t\t\t\t\tvar leftSidenav = $('[md-component-id=\"left\"]');\r\n\t\t\t\t\tif(leftSidenav.hasClass('md-closed') && leftSidenav.hasClass('md-locked-open')){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$mdSidenav('left').toggle();\r\n\t\t\t\t}],\r\n\t\t\t})\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Department Routes\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\t.state('main.department', {\r\n\t\t\t\turl: 'department/{departmentID}',\r\n\t\t\t\tparams: {'name':null},\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'content-container': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/views/content-container.view.html',\r\n\t\t\t\t\t\tcontroller: 'departmentContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main.department': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/toolbar.template.html',\r\n\t\t\t\t\t\tcontroller: 'departmentToolbarController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main.department': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/admin/templates/content/department.content.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tonExit: ['$mdSidenav', function($mdSidenav){\r\n\t\t\t\t\tvar leftSidenav = $('[md-component-id=\"left\"]');\r\n\t\t\t\t\tif(leftSidenav.hasClass('md-closed') && leftSidenav.hasClass('md-locked-open')){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$mdSidenav('left').toggle();\r\n\t\t\t\t}],\r\n\t\t\t})\r\n\t}]);","adminModule\r\n\t.service('AssetTagService', ['AssetTag', 'Preloader', function(AssetTag, Preloader){\r\n\t\tvar type = null;\r\n\t\tvar station = null;\r\n\t\tvar id = null;\r\n\t\treturn {\r\n\t\t\tsetStation: function(data){\r\n\t\t\t\tstation = data;\r\n\t\t\t},\r\n\t\t\tgetStation: function(){\r\n\t\t\t\treturn station;\r\n\t\t\t},\r\n\t\t\tsetType: function(data){\r\n\t\t\t\ttype = data;\r\n\t\t\t},\r\n\t\t\tgetType: function(){\r\n\t\t\t\treturn type;\r\n\t\t\t},\r\n\t\t\tsetID: function(data){\r\n\t\t\t\tid = data;\r\n\t\t\t},\r\n\t\t\tgetID: function(){\r\n\t\t\t\treturn id;\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.service('assetService', ['$http', function($http){\r\n\t\tvar assets = [\r\n\t\t\t{ 'controller' : 'cpu' },\r\n\t\t\t{ 'controller' : 'firewall' },\r\n\t\t\t{ 'controller' : 'hardDisk' },\r\n\t\t\t{ 'controller' : 'headset' },\r\n\t\t\t{ 'controller' : 'keyboard' },\r\n\t\t\t{ 'controller' : 'mac' },\r\n\t\t\t{ 'controller' : 'memory' },\r\n\t\t\t{ 'controller' : 'monitor' },\r\n\t\t\t{ 'controller' : 'mouse' },\r\n\t\t\t{ 'controller' : 'networkSwitch' },\r\n\t\t\t{ 'controller' : 'portableHardDisk' },\r\n\t\t\t{ 'controller' : 'printer' },\r\n\t\t\t{ 'controller' : 'projector' },\r\n\t\t\t{ 'controller' : 'router' },\r\n\t\t\t{ 'controller' : 'scanner' },\r\n\t\t\t{ 'controller' : 'software' },\r\n\t\t\t{ 'controller' : 'speaker' },\r\n\t\t\t{ 'controller' : 'telephone' },\r\n\t\t\t{ 'controller' : 'ups' },\r\n\t\t\t{ 'controller' : 'videoCard' },\r\n\t\t\t{ 'controller' : 'otherComponent' },\r\n\t\t];\r\n\r\n\t\treturn{\r\n\t\t\tget: function(){\r\n\t\t\t\treturn assets;\r\n\t\t\t},\r\n\t\t\ttoolbarController: function(id){\r\n\t\t\t\t// returns assetNameToolbarController\r\n\t\t\t\treturn assets[id].controller  + 'ToolbarController';\r\n\t\t\t},\r\n\t\t\tcontentContainerController: function(id){\r\n\t\t\t\t// returns assetNameContentContainerController\r\n\t\t\t\treturn assets[id].controller  + 'ContentContainerController';\r\n\t\t\t},\r\n\t\t\tcontentController: function(id){\r\n\t\t\t\t// returns assetNameContentController\r\n\t\t\t\treturn assets[id].controller  + 'ContentController';\r\n\t\t\t},\r\n\t\t\trightSidenavController: function(id){\r\n\t\t\t\t// returns assetNameRightSidenavController\r\n\t\t\t\treturn assets[id].controller  + 'RightSidenavController';\r\n\t\t\t},\r\n\t\t\tunitToolbarController: function(id){\r\n\t\t\t\t// returns assetNameToolbarController\r\n\t\t\t\treturn assets[id].controller  + 'UnitToolbarController';\r\n\t\t\t},\r\n\t\t\tunitContentContainerController: function(id){\r\n\t\t\t\t// returns assetNameContentContainerController\r\n\t\t\t\treturn assets[id].controller  + 'UnitContentContainerController';\r\n\t\t\t},\r\n\t\t\tunitContentController: function(id){\r\n\t\t\t\t// returns assetNameContentController\r\n\t\t\t\treturn assets[id].controller  + 'UnitContentController';\r\n\t\t\t},\r\n\t\t\tunitRightSidenavController: function(id){\r\n\t\t\t\t// returns assetNameRightSidenavController\r\n\t\t\t\treturn assets[id].controller  + 'UnitRightSidenavController';\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.service('departmentService', function(){\r\n\t\tvar departments = [];\r\n\r\n\t\treturn {\r\n\t\t\tset: function(data){\r\n\t\t\t\tdepartments = data;\r\n\t\t\t},\r\n\t\t\tget: function(){\r\n\t\t\t\treturn departments;\r\n\t\t\t},\r\n\t\t};\r\n\t});","adminModule\r\n\t.service('UserService', function(){\r\n\t\tvar user = null;\r\n\r\n\t\treturn {\r\n\t\t\tset: function(data){\r\n\t\t\t\tuser = data;\r\n\t\t\t},\r\n\t\t\tget: function(){\r\n\t\t\t\treturn user;\r\n\t\t\t},\r\n\t\t}\r\n\t});","adminModule\r\n\t.controller('barcodeDialogController', ['$scope', '$mdDialog', function($scope, $mdDialog){\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\t\t\r\n\t\t$scope.barcode = {};\r\n\t\t$scope.barcode.category = 'assets';\r\n\t\t$scope.max = 99999;\r\n\t\t$scope.floors = ['06', '10'];\r\n\t\t$scope.divisions = ['A', 'B'];\r\n\t\t$scope.types = [\r\n\t\t\t{'name':'Admin', 'value':'A'},\r\n\t\t\t{'name':'Production', 'value':'P'}\r\n\t\t];\r\n\r\n\t\t$scope.checkMax = function(){\r\n\t\t\tif($scope.barcode.category == 'workstation')\r\n\t\t\t\t$scope.max = 999;\r\n\t\t\telse\r\n\t\t\t\t$scope.max = 99999;\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.detailsForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.detailsForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif($scope.barcode.category == 'assets'){\t\t\t\t\r\n\t\t\t\t\tvar win = window.open('/barcode-assets/' + $scope.barcode.format + '/starting-point/' + $scope.barcode.starting_point + '/quantity/' + $scope.barcode.quantity , '_blank');\r\n\t\t\t\t\twin.focus();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar win = window.open('/barcode-work-station/' + $scope.barcode.floor + '/division/' + $scope.barcode.division + '/type/' + $scope.barcode.type + '/starting-point/' + $scope.barcode.starting_point + '/quantity/' + $scope.barcode.quantity , '_blank');\r\n\t\t\t\t\twin.focus();\t\r\n\t\t\t\t}\r\n\t\t\t\t$mdDialog.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('leftSidenavController', ['$scope', '$mdSidenav', 'Department', 'departmentService', function($scope, $mdSidenav, Department, departmentService){\r\n\t\t$scope.menu = {};\r\n\r\n\t\t$scope.menu.section = [\r\n\t\t\t{\r\n\t\t\t\t'name':'Dashboard',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'name':'Assets',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'name':'Departments',\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t$scope.menu.pages = [\r\n\t\t\t/* 0 */\r\n\t\t\t[\r\n\t\t\t\t// {\r\n\t\t\t\t// \t'name':'Analysis',\r\n\t\t\t\t// \t'state':'main.analysis',\r\n\t\t\t\t// },\r\n\t\t\t\t{\r\n\t\t\t\t\t'name':'Floor Plan',\r\n\t\t\t\t\t'state':'main.floor-plan',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t/* 1 */\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'CPU',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Firewall',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 2\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Hard Disk',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Headset',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 4\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Keyboard',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Mac Computer',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 6\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Memory',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 7\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Monitor',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 8\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Mouse',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 9\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Network Switch',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Portable Hard Disk',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 11\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Printer',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 12\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Projector',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 13\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Router',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 14\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Scanner',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 15\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Software',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 16\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Speaker',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 17\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Telephone',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 18\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'UPS',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 19\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Video Card',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 20\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'name': 'Other Components',\r\n\t\t\t\t\t'state':'main.assets',\r\n\t\t\t\t\t'id': 21\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t];\r\n\r\n\t\t/* AJAX Request Department */\r\n\t\tDepartment.index()\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.menu.pages.push(data);\r\n\t\t\t\tthis.index = $scope.menu.pages.length - 1;\r\n\t\t\t\t/* Save the department on service for future use */\r\n\t\t\t\tdepartmentService.set($scope.menu.pages[this.index]);\r\n\t\t\t});\r\n\r\n\t\t// set section as active\r\n\t\t$scope.setActive = function(index){\r\n\t\t \tangular.element($('[aria-label=\"'+ 'section-' + index + '\"]').closest('li').toggleClass('active'));\r\n\t\t \tangular.element($('[aria-label=\"'+ 'section-' + index + '\"]').closest('li').siblings().removeClass('active'));\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('mainContentContainerController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Log', 'EmailReport', 'AssetTag', 'WorkStationTag', function($scope, $state, $mdDialog, Preloader, Log, EmailReport, AssetTag, WorkStationTag){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'logs';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t$scope.search = {};\r\n\t\t\t// clear log\r\n\t\t\t$scope.log.paginated = {};\r\n\t\t\t$scope.log.page = 2;\r\n\t\t\tLog.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.log.paginated = data.data;\r\n\t\t\t\t\t$scope.log.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\r\n\r\n\t\t};\r\n\r\n\t\t$scope.subheader.download = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\r\n\t\t\tEmailReport.index()\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.subheader.barcode = function(){\r\n\t\t\t$mdDialog.show({\r\n\t\t    \tcontroller: 'barcodeDialogController',\r\n\t\t      \ttemplateUrl: '/app/components/admin/templates/dialogs/barcode-dialog.template.html',\r\n\t\t      \tparent: angular.element(document.body),\r\n\t\t    });\r\n\t\t}\r\n\t\t/**\r\n\t\t * Object for log\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.log = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.log.page = 2;\r\n\t\t//\r\n\r\n\t\tLog.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.log.paginated = data.data;\r\n\t\t\t\t$scope.log.paginated.show = true;\r\n\r\n\t\t\t\t$scope.log.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.log.busy || ($scope.log.page > $scope.log.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.log.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tLog.paginate($scope.log.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.log.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.log.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.log.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.search.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\r\n\t\t$scope.search = {};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\tif($scope.search.userInput){\r\n\t\t\t\t$scope.search.showWorkStation = false;\r\n\t\t\t\tvar firstLetter = $scope.search.userInput.charAt(0);\r\n\t\t\t\tif(firstLetter == 'p' || firstLetter == 'P'){\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tAssetTag.searchBarcode($scope.search)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t$scope.search.showAsset = true;\r\n\t\t\t\t\t\t\t$scope.search.result = data;\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse if(firstLetter == 'a' || firstLetter == 'A'){\r\n\t\t\t\t\t$scope.search.showAsset = false;\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tWorkStationTag.searchBarcode($scope.search)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t$scope.search.showWorkStation = true;\r\n\t\t\t\t\t\t\t$scope.search.result = data;\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\t$scope.search.show = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID});\r\n\t\t};\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t// $scope.fab.icon = 'mdi-plus';\r\n\t\t// $scope.fab.label = 'Add';\r\n\t\t\r\n\t\t$scope.fab.show = false;\r\n\r\n\t\t// $scope.fab.action = function(){\r\n\t\t// \treturn;\r\n\t\t// };\r\n\r\n\t\t$scope.rightSidenav = {};\r\n\t\t$scope.rightSidenav.show = true;\r\n\t}]);","adminModule\r\n\t.controller('mainContentController', ['$scope', function($scope){\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.content = {};\r\n\r\n\t\t$scope.content.title = 'Coming Soon...';\r\n\t}]);","adminModule\r\n\t.controller('mainRightSidenavController', ['$scope', function($scope){\r\n\t\t/**\r\n\t\t * Object of Right Sidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.sidenav = {};\r\n\r\n\t\t$scope.sidenav.title = 'Right Sidenav Initialized';\r\n\t}]);","adminModule\r\n\t.controller('mainToolbarController', ['$scope', '$state', function($scope, $state){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t/**\r\n\t\t * Properties and method of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.childState = 'Home';\r\n\t}]);","adminModule\r\n\t.controller('mainViewController', ['$scope', '$mdSidenav', 'User', function($scope, $mdSidenav, User){\r\n\t\t/**\r\n\t\t * Fetch authenticated user information\r\n\t\t *\r\n\t\t*/\r\n\t\tUser.index()\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.user = data;\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Toggles Left Sidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toggleSidenav = function(menuId) {\r\n\t\t    $mdSidenav(menuId).toggle();\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('toolbarController', ['$scope', '$mdSidenav', function($scope, $mdSidenav){\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t$scope.toolbar.parentState = 'Home';\r\n\t}]);","adminModule\r\n\t.controller('addEmployeeDialogController', ['$scope', '$stateParams', '$mdDialog', 'Preloader', 'Department', 'Employee', function($scope, $stateParams, $mdDialog, Preloader, Department, Employee){\r\n\t\t$scope.employee = {};\r\n\t\t$scope.employee.department_id = $stateParams.departmentID;\r\n\r\n\t\tDepartment.show($stateParams.departmentID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.department = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tEmployee.store($scope.employee)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('departmentContentContainerController', ['$scope', '$stateParams', '$mdDialog', 'Preloader', 'Employee', 'UserService', function($scope, $stateParams, $mdDialog, Preloader, Employee, UserService){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\tvar departmentID = $stateParams.departmentID;\r\n\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'departments';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.employee.paginated = {};\r\n\t\t\t$scope.employee.page = 2;\r\n\t\t\tEmployee.paginateDepartment(departmentID)\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.employee.paginated = data.data;\r\n\t\t\t\t\t$scope.employee.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addEmployeeDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-employee-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Employee\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.employee = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.employee.page = 2;\r\n\t\t//\r\n\r\n\t\tEmployee.paginateDepartment(departmentID)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.employee.paginated = data.data;\r\n\t\t\t\t$scope.employee.paginated.show = true;\r\n\r\n\t\t\t\t$scope.employee.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.employee.busy || ($scope.employee.page > $scope.employee.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.employee.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tEmployee.paginateDepartment(departmentID, $scope.employee.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.employee.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.employee.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.employee.busy = false;\r\n\r\n\t\t\t\t\t\t\tconsole.log('loaded');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.employee.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.employee.paginated.show = false;\r\n\t\t\tPreloader.preload()\r\n\t\t\tEmployee.search(departmentID, $scope.employee)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.employee.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\tUserService.set(id);\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'showEmployeeDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/show-employee-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t      \tclickOutsideToClose:true,\r\n\t\t    });\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('departmentToolbarController', ['$scope', '$stateParams', 'Department', 'departmentService', function($scope, $stateParams, Department, departmentService){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t/**\r\n\t\t * Properties and method of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t/**\r\n\t\t * Fetch the department data stored at deparments servce.\r\n\t\t *\r\n\t\t*/\r\n\t\tvar index = $stateParams.departmentID - 1;\r\n\t\t$scope.toolbar.parentState = 'Departments';\r\n\r\n\t\tvar departments = departmentService.get();\r\n\t\tif(!departments.length){\r\n\t\t\tDepartment.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tdepartments = data;\r\n\t\t\t\t\t$scope.toolbar.childState = departments[index].name;\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreload.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$scope.toolbar.childState = departments[index].name;\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('showEmployeeDialogController', ['$scope', '$mdDialog', '$stateParams', 'UserService', 'EmployeeTag', 'Employee', function($scope, $mdDialog, $stateParams, UserService, EmployeeTag, Employee){\r\n\t\tvar employeeID = UserService.get();\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\tEmployee.show(employeeID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.employee = data;\r\n\t\t\t});\r\n\r\n\t\tEmployeeTag.employee(employeeID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.workstation = data;\r\n\t\t\t});\r\n\t}]);","adminModule\r\n\t.controller('addHardDiskDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'HardDisk', function($scope, $state, $mdDialog, Preloader, HardDisk){\r\n\t\t$scope.hardDisk = {};\r\n\r\n\t\t$scope.hardDisk.capacities = [\r\n\t\t\t{'capacity':'160GB'},\r\n\t\t\t{'capacity':'320GB'},\r\n\t\t\t{'capacity':'500GB'},\r\n\t\t\t{'capacity':'650GB'},\r\n\t\t\t{'capacity':'1.0TB'},\r\n\t\t\t{'capacity':'2.0TB'},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tHardDisk.store($scope.hardDisk)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('hardDiskContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'HardDisk', function($scope, $state, $stateParams, $mdDialog, Preloader, HardDisk){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.hardDisk.paginated = {};\r\n\t\t\t$scope.hardDisk.page = 2;\r\n\t\t\tHardDisk.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.hardDisk.paginated = data.data;\r\n\t\t\t\t\t$scope.hardDisk.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Hard Disk';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addHardDiskDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-hard-disk-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Hard Disk\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hardDisk = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.hardDisk.page = 2;\r\n\r\n\t\tHardDisk.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.hardDisk.paginated = data.data;\r\n\t\t\t\t$scope.hardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.hardDisk.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.hardDisk.busy || ($scope.hardDisk.page > $scope.hardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.hardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tHardDisk.paginate($scope.hardDisk.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.hardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.hardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.hardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.hardDisk.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.hardDisk.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tHardDisk.search($scope.hardDisk)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.hardDisk.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('hardDiskToolbarController', ['$scope', 'HardDisk', function($scope, HardDisk){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Hard Disk';\r\n\t}]);","adminModule\r\n\t.controller('hardDiskUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Headset';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear hardDisk\r\n\t\t\t$scope.hardDisk.paginated = {};\r\n\t\t\t$scope.hardDisk.results = null;\r\n\t\t\t$scope.hardDisk.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.hardDisk.paginated = data.data;\r\n\t\t\t\t$scope.hardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.hardDisk.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.hardDisk.busy || ($scope.hardDisk.page > $scope.hardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.hardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.hardDisk.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.hardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.hardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.hardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear hardDisk\r\n\t\t\t$scope.hardDisk.paginated = {};\r\n\t\t\t$scope.hardDisk.results = null;\r\n\t\t\t$scope.hardDisk.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.hardDisk.paginated = data.data;\r\n\t\t\t\t$scope.hardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.hardDisk.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.hardDisk.busy || ($scope.hardDisk.page > $scope.hardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.hardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.hardDisk.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.hardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.hardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.hardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear hardDisk\r\n\t\t\t$scope.hardDisk.paginated = {};\r\n\t\t\t$scope.hardDisk.results = null;\r\n\t\t\t$scope.hardDisk.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.hardDisk.paginated = data.data;\r\n\t\t\t\t$scope.hardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.hardDisk.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.hardDisk.busy || ($scope.hardDisk.page > $scope.hardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.hardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.hardDisk.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.hardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.hardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.hardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for hardDisk\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hardDisk = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.hardDisk.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.hardDisk.paginated = data.data;\r\n\t\t\t\t$scope.hardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.hardDisk.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.hardDisk.busy || ($scope.hardDisk.page > $scope.hardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.hardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.hardDisk.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.hardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.hardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.hardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.hardDisk.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.hardDisk.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.hardDisk.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Headset';\r\n\t\t\tquery.table_name = 'headsets';\r\n\t\t\tquery.property_code = 'PHDS';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.hardDisk.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('hardDiskUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'HardDisk', function($scope, $state, $stateParams, HardDisk){\r\n\t\t$scope.asset = 'Hard Disk';\r\n\r\n\t\tHardDisk.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('hardDiskUnitToolbarController', ['$scope', '$state', '$stateParams', 'HardDisk', function($scope, $state, $stateParams, HardDisk){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tHardDisk.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.model;\r\n\t\t\t\t$scope.toolbar.childState = data.capacity;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addFirewallDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Firewall', function($scope, $state, $mdDialog, Preloader, Firewall){\r\n\t\t$scope.firewall = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tFirewall.store($scope.firewall)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('firewallContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Firewall', function($scope, $state, $stateParams, $mdDialog, Preloader, Firewall){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.firewall.paginated = {};\r\n\t\t\t$scope.firewall.page = 2;\r\n\t\t\tFirewall.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.firewall.paginated = data.data;\r\n\t\t\t\t\t$scope.firewall.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Firewall';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addFirewallDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-firewall-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Firewall\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.firewall = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.firewall.page = 2;\r\n\r\n\t\tFirewall.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.firewall.paginated = data.data;\r\n\t\t\t\t$scope.firewall.paginated.show = true;\r\n\r\n\t\t\t\t$scope.firewall.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.firewall.busy || ($scope.firewall.page > $scope.firewall.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.firewall.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tFirewall.paginate($scope.firewall.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.firewall.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.firewall.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.firewall.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.firewall.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.firewall.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tFirewall.search($scope.firewall)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.firewall.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('firewallToolbarController', ['$scope', 'Firewall', function($scope, Firewall){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Firewall';\r\n\t}]);","adminModule\r\n\t.controller('firewallUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Firewall';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear firewall\r\n\t\t\t$scope.firewall.paginated = {};\r\n\t\t\t$scope.firewall.results = null;\r\n\t\t\t$scope.firewall.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.firewall.paginated = data.data;\r\n\t\t\t\t$scope.firewall.paginated.show = true;\r\n\r\n\t\t\t\t$scope.firewall.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.firewall.busy || ($scope.firewall.page > $scope.firewall.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.firewall.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.firewall.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.firewall.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.firewall.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.firewall.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear firewall\r\n\t\t\t$scope.firewall.paginated = {};\r\n\t\t\t$scope.firewall.results = null;\r\n\t\t\t$scope.firewall.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.firewall.paginated = data.data;\r\n\t\t\t\t$scope.firewall.paginated.show = true;\r\n\r\n\t\t\t\t$scope.firewall.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.firewall.busy || ($scope.firewall.page > $scope.firewall.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.firewall.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.firewall.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.firewall.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.firewall.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.firewall.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear firewall\r\n\t\t\t$scope.firewall.paginated = {};\r\n\t\t\t$scope.firewall.results = null;\r\n\t\t\t$scope.firewall.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.firewall.paginated = data.data;\r\n\t\t\t\t$scope.firewall.paginated.show = true;\r\n\r\n\t\t\t\t$scope.firewall.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.firewall.busy || ($scope.firewall.page > $scope.firewall.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.firewall.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.firewall.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.firewall.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.firewall.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.firewall.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for firewall\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.firewall = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.firewall.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.firewall.paginated = data.data;\r\n\t\t\t\t$scope.firewall.paginated.show = true;\r\n\r\n\t\t\t\t$scope.firewall.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.firewall.busy || ($scope.firewall.page > $scope.firewall.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.firewall.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.firewall.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.firewall.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.firewall.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.firewall.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.firewall.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.firewall.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.firewall.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Firewall';\r\n\t\t\tquery.table_name = 'firewalls';\r\n\t\t\tquery.property_code = 'PFWL';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.firewall.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('firewallUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Firewall', function($scope, $state, $stateParams, Firewall){\r\n\t\t$scope.asset = 'Firewall';\r\n\r\n\t\tFirewall.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('firewallUnitToolbarController', ['$scope', '$state', '$stateParams', 'Firewall', function($scope, $state, $stateParams, Firewall){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tFirewall.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addHeadsetDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Headset', function($scope, $state, $mdDialog, Preloader, Headset){\r\n\t\t$scope.headset = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tHeadset.store($scope.headset)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('headsetContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Headset', function($scope, $state, $stateParams, $mdDialog, Preloader, Headset){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.headset.paginated = {};\r\n\t\t\t$scope.headset.page = 2;\r\n\t\t\tHeadset.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.headset.paginated = data.data;\r\n\t\t\t\t\t$scope.headset.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Headset';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addHeadsetDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-headset-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Headset\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.headset = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.headset.page = 2;\r\n\r\n\t\tHeadset.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.headset.paginated = data.data;\r\n\t\t\t\t$scope.headset.paginated.show = true;\r\n\r\n\t\t\t\t$scope.headset.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.headset.busy || ($scope.headset.page > $scope.headset.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.headset.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tHeadset.paginate($scope.headset.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.headset.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.headset.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.headset.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.headset.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.headset.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tHeadset.search($scope.headset)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.headset.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('headsetToolbarController', ['$scope', 'Headset', function($scope, Headset){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Headset';\r\n\t}]);","adminModule\r\n\t.controller('headsetUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Headset';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear headset\r\n\t\t\t$scope.headset.paginated = {};\r\n\t\t\t$scope.headset.results = null;\r\n\t\t\t$scope.headset.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.headset.paginated = data.data;\r\n\t\t\t\t$scope.headset.paginated.show = true;\r\n\r\n\t\t\t\t$scope.headset.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.headset.busy || ($scope.headset.page > $scope.headset.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.headset.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.headset.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.headset.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.headset.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.headset.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear headset\r\n\t\t\t$scope.headset.paginated = {};\r\n\t\t\t$scope.headset.results = null;\r\n\t\t\t$scope.headset.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.headset.paginated = data.data;\r\n\t\t\t\t$scope.headset.paginated.show = true;\r\n\r\n\t\t\t\t$scope.headset.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.headset.busy || ($scope.headset.page > $scope.headset.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.headset.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.headset.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.headset.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.headset.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.headset.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear headset\r\n\t\t\t$scope.headset.paginated = {};\r\n\t\t\t$scope.headset.results = null;\r\n\t\t\t$scope.headset.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.headset.paginated = data.data;\r\n\t\t\t\t$scope.headset.paginated.show = true;\r\n\r\n\t\t\t\t$scope.headset.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.headset.busy || ($scope.headset.page > $scope.headset.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.headset.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.headset.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.headset.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.headset.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.headset.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for headset\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.headset = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.headset.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.headset.paginated = data.data;\r\n\t\t\t\t$scope.headset.paginated.show = true;\r\n\r\n\t\t\t\t$scope.headset.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.headset.busy || ($scope.headset.page > $scope.headset.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.headset.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.headset.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.headset.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.headset.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.headset.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.headset.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.headset.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.headset.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Headset';\r\n\t\t\tquery.table_name = 'headsets';\r\n\t\t\tquery.property_code = 'PHDS';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.headset.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('headsetUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Headset', function($scope, $state, $stateParams, Headset){\r\n\t\t$scope.asset = 'Headset';\r\n\r\n\t\tHeadset.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('headsetUnitToolbarController', ['$scope', '$state', '$stateParams', 'Headset', function($scope, $state, $stateParams, Headset){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tHeadset.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addDesktopDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Desktop', function($scope, $state, $mdDialog, Preloader, Desktop){\r\n\t\t$scope.cpu = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tDesktop.store($scope.cpu)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('cpuContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Desktop', function($scope, $state, $stateParams, $mdDialog, Preloader, Desktop){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.desktop.paginated = {};\r\n\t\t\t$scope.desktop.page = 2;\r\n\t\t\tDesktop.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.desktop.paginated = data.data;\r\n\t\t\t\t\t$scope.desktop.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add CPU';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addDesktopDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-cpu-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Desktop\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.desktop = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.desktop.page = 2;\r\n\t\t//\r\n\r\n\t\tDesktop.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.desktop.paginated = data.data;\r\n\t\t\t\t$scope.desktop.paginated.show = true;\r\n\r\n\t\t\t\t$scope.desktop.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.desktop.busy || ($scope.desktop.page > $scope.desktop.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.desktop.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tDesktop.paginate($scope.desktop.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.desktop.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.desktop.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.desktop.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.desktop.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.desktop.paginated.show = false;\r\n\t\t\tPreloader.preload()\r\n\t\t\tDesktop.search($scope.desktop)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.desktop.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);\r\n","adminModule\r\n\t.controller('cpuContentController', ['$scope', function($scope){\r\n\t\t\r\n\t}])","adminModule\r\n\t.controller('cpuRightSidenavController', ['$scope', function($scope){\r\n\t\t//\r\n\t}])","adminModule\r\n\t.controller('cpuToolbarController', ['$scope', 'Desktop', function($scope, Desktop){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'CPU';\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('cpuUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Desktop';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.desktop.paginated = {};\r\n\t\t\t$scope.desktop.results = null;\r\n\t\t\t$scope.desktop.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.desktop.paginated = data.data;\r\n\t\t\t\t$scope.desktop.paginated.show = true;\r\n\r\n\t\t\t\t$scope.desktop.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.desktop.busy || ($scope.desktop.page > $scope.desktop.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.desktop.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.desktop.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.desktop.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.desktop.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.desktop.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.desktop.paginated = {};\r\n\t\t\t$scope.desktop.results = null;\r\n\t\t\t$scope.desktop.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.desktop.paginated = data.data;\r\n\t\t\t\t$scope.desktop.paginated.show = true;\r\n\r\n\t\t\t\t$scope.desktop.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.desktop.busy || ($scope.desktop.page > $scope.desktop.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.desktop.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.desktop.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.desktop.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.desktop.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.desktop.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.desktop.paginated = {};\r\n\t\t\t$scope.desktop.results = null;\r\n\t\t\t$scope.desktop.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.desktop.paginated = data.data;\r\n\t\t\t\t$scope.desktop.paginated.show = true;\r\n\r\n\t\t\t\t$scope.desktop.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.desktop.busy || ($scope.desktop.page > $scope.desktop.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.desktop.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.desktop.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.desktop.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.desktop.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.desktop.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for Desktop\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.desktop = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.desktop.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.desktop.paginated = data.data;\r\n\t\t\t\t$scope.desktop.paginated.show = true;\r\n\r\n\t\t\t\t$scope.desktop.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.desktop.busy || ($scope.desktop.page > $scope.desktop.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.desktop.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.desktop.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.desktop.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.desktop.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.desktop.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.desktop.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.desktop.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.desktop.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Desktop';\r\n\t\t\tquery.table_name = 'desktops';\r\n\t\t\tquery.property_code = 'PCPU';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.desktop.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t        .title('Would you like to include components under this unit?')\r\n\t\t        .content('Hard disk(s), RAM(s), video card, and softwares will be marked as repaired along with the unit.')\r\n\t\t        .ok('Continue')\r\n\t\t        .cancel('Keep it');\r\n\t\t    $mdDialog.show(confirm)\r\n\t\t    \t.then(function() {\r\n\t\t\t      \tPreloader.preload();\r\n\t\t\t\t\tAssetTag.active(id)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\tAssetTag.activeComponents(data.work_station_id)\r\n\t\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t});\r\n\t\t\t    }, function() {\r\n\t\t\t    \tPreloader.preload();\r\n\t\t\t\t    AssetTag.active(id)\r\n\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t});\r\n\t\t\t    });\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('cpuUnitContentController', ['$scope', function($scope){\r\n\t\t\r\n\t}])","adminModule\r\n\t.controller('cpuUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Desktop', function($scope, $state, $stateParams, Desktop){\r\n\t\t$scope.asset = 'CPU';\r\n\r\n\t\tDesktop.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('cpuUnitToolbarController', ['$scope', '$state', '$stateParams', 'Desktop', function($scope, $state, $stateParams, Desktop){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tDesktop.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addMacDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Mac', function($scope, $state, $mdDialog, Preloader, Mac){\r\n\t\t$scope.mac = {};\r\n\r\n\t\t$scope.types = [\r\n\t\t\t{'name':'iMac'},\r\n\t\t\t{'name':'Mac Mini'},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tMac.store($scope.mac)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('macContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Mac', function($scope, $state, $stateParams, $mdDialog, Preloader, Mac){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.mac.paginated = {};\r\n\t\t\t$scope.mac.page = 2;\r\n\t\t\tMac.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.mac.paginated = data.data;\r\n\t\t\t\t\t$scope.mac.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Mac';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addMacDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-mac-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for mac\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.mac = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.mac.page = 2;\r\n\r\n\t\tMac.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.mac.paginated = data.data;\r\n\t\t\t\t$scope.mac.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mac.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mac.busy || ($scope.mac.page > $scope.mac.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mac.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tMac.paginate($scope.mac.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mac.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mac.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mac.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.mac.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.mac.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tMac.search($scope.mac)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.mac.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('macToolbarController', ['$scope', 'Mac', function($scope, Mac){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Mac';\r\n\t}]);","adminModule\r\n\t.controller('macUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Mac';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear mac\r\n\t\t\t$scope.mac.paginated = {};\r\n\t\t\t$scope.mac.results = null;\r\n\t\t\t$scope.mac.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.mac.paginated = data.data;\r\n\t\t\t\t$scope.mac.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mac.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mac.busy || ($scope.mac.page > $scope.mac.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mac.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.mac.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mac.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mac.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mac.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear mac\r\n\t\t\t$scope.mac.paginated = {};\r\n\t\t\t$scope.mac.results = null;\r\n\t\t\t$scope.mac.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.mac.paginated = data.data;\r\n\t\t\t\t$scope.mac.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mac.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mac.busy || ($scope.mac.page > $scope.mac.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mac.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.mac.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mac.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mac.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mac.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear mac\r\n\t\t\t$scope.mac.paginated = {};\r\n\t\t\t$scope.mac.results = null;\r\n\t\t\t$scope.mac.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.mac.paginated = data.data;\r\n\t\t\t\t$scope.mac.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mac.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mac.busy || ($scope.mac.page > $scope.mac.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mac.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.mac.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mac.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mac.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mac.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for mac\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.mac = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.mac.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.mac.paginated = data.data;\r\n\t\t\t\t$scope.mac.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mac.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mac.busy || ($scope.mac.page > $scope.mac.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mac.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.mac.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mac.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mac.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mac.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.mac.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.mac.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.mac.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Mac';\r\n\t\t\tquery.table_name = 'macs';\r\n\t\t\tquery.property_code = 'PMAC';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.mac.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('macUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Mac', function($scope, $state, $stateParams, Mac){\r\n\t\t$scope.asset = 'Mac';\r\n\r\n\t\tMac.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('macUnitToolbarController', ['$scope', '$state', '$stateParams', 'Mac', function($scope, $state, $stateParams, Mac){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tMac.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.type;\r\n\t\t\t\t$scope.toolbar.childState = data.processor;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addKeyboardDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Keyboard', function($scope, $state, $mdDialog, Preloader, Keyboard){\r\n\t\t$scope.keyboard = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tKeyboard.store($scope.keyboard)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('keyboardContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Keyboard', function($scope, $state, $stateParams, $mdDialog, Preloader, Keyboard){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.keyboard.paginated = {};\r\n\t\t\t$scope.keyboard.page = 2;\r\n\t\t\tKeyboard.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.keyboard.paginated = data.data;\r\n\t\t\t\t\t$scope.keyboard.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Keyboard';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addKeyboardDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-keyboard-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Headset\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.keyboard = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.keyboard.page = 2;\r\n\r\n\t\tKeyboard.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.keyboard.paginated = data.data;\r\n\t\t\t\t$scope.keyboard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.keyboard.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.keyboard.busy || ($scope.keyboard.page > $scope.keyboard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.keyboard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tKeyboard.paginate($scope.keyboard.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.keyboard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.keyboard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.keyboard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.keyboard.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.keyboard.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tKeyboard.search($scope.keyboard)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.keyboard.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('keyboardToolbarController', ['$scope', '$stateParams', 'Keyboard', function($scope, $stateParams, Keyboard){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Keyboard';\r\n\t}]);","adminModule\r\n\t.controller('keyboardUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Keyboard';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear keyboard\r\n\t\t\t$scope.keyboard.paginated = {};\r\n\t\t\t$scope.keyboard.results = null;\r\n\t\t\t$scope.keyboard.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.keyboard.paginated = data.data;\r\n\t\t\t\t$scope.keyboard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.keyboard.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.keyboard.busy || ($scope.keyboard.page > $scope.keyboard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.keyboard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.keyboard.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.keyboard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.keyboard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.keyboard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear keyboard\r\n\t\t\t$scope.keyboard.paginated = {};\r\n\t\t\t$scope.keyboard.results = null;\r\n\t\t\t$scope.keyboard.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.keyboard.paginated = data.data;\r\n\t\t\t\t$scope.keyboard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.keyboard.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.keyboard.busy || ($scope.keyboard.page > $scope.keyboard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.keyboard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.keyboard.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.keyboard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.keyboard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.keyboard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear keyboard\r\n\t\t\t$scope.keyboard.paginated = {};\r\n\t\t\t$scope.keyboard.results = null;\r\n\t\t\t$scope.keyboard.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.keyboard.paginated = data.data;\r\n\t\t\t\t$scope.keyboard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.keyboard.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.keyboard.busy || ($scope.keyboard.page > $scope.keyboard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.keyboard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.keyboard.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.keyboard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.keyboard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.keyboard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for keyboard\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.keyboard = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.keyboard.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.keyboard.paginated = data.data;\r\n\t\t\t\t$scope.keyboard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.keyboard.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.keyboard.busy || ($scope.keyboard.page > $scope.keyboard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.keyboard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.keyboard.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.keyboard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.keyboard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.keyboard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.keyboard.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.keyboard.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.keyboard.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Keyboard';\r\n\t\t\tquery.table_name = 'keyboards';\r\n\t\t\tquery.property_code = 'PKBD';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.keyboard.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('keyboardUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Keyboard', function($scope, $state, $stateParams, Keyboard){\r\n\t\t$scope.asset = 'Keyboard';\r\n\r\n\t\tKeyboard.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('keyboardUnitToolbarController', ['$scope', '$state', '$stateParams', 'Keyboard', function($scope, $state, $stateParams, Keyboard){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tKeyboard.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addMonitorDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Monitor', function($scope, $state, $mdDialog, Preloader, Monitor){\r\n\t\t$scope.monitor = {};\r\n\r\n\t\t$scope.monitor.sizes = [\r\n\t\t\t{'size':'16\"'},\r\n\t\t\t{'size':'16.5\"'},\r\n\t\t\t{'size':'17\"'},\r\n\t\t\t{'size':'17.5\"'},\r\n\t\t\t{'size':'18\"'},\r\n\t\t\t{'size':'18.5\"'},\r\n\t\t\t{'size':'19\"'},\r\n\t\t\t{'size':'19.5\"'},\r\n\t\t\t{'size':'20\"'},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tMonitor.store($scope.monitor)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('monitorContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Monitor', function($scope, $state, $stateParams, $mdDialog, Preloader, Monitor){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.monitor.paginated = {};\r\n\t\t\t$scope.monitor.page = 2;\r\n\t\t\tMonitor.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.monitor.paginated = data.data;\r\n\t\t\t\t\t$scope.monitor.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Monitor';\t\t\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addMonitorDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-monitor-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Headset\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.monitor = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.monitor.page = 2;\r\n\r\n\t\tMonitor.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.monitor.paginated = data.data;\r\n\t\t\t\t$scope.monitor.paginated.show = true;\r\n\r\n\t\t\t\t$scope.monitor.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.monitor.busy || ($scope.monitor.page > $scope.monitor.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.monitor.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tMonitor.paginate($scope.monitor.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.monitor.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.monitor.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.monitor.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.monitor.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.monitor.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tMonitor.search($scope.monitor)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.monitor.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('monitorToolbarController', ['$scope', '$stateParams', 'Monitor', function($scope, $stateParams, Monitor){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Monitor';\r\n\t}]);","adminModule\r\n\t.controller('monitorUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Monitor';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear monitor\r\n\t\t\t$scope.monitor.paginated = {};\r\n\t\t\t$scope.monitor.results = null;\r\n\t\t\t$scope.monitor.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.monitor.paginated = data.data;\r\n\t\t\t\t$scope.monitor.paginated.show = true;\r\n\r\n\t\t\t\t$scope.monitor.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.monitor.busy || ($scope.monitor.page > $scope.monitor.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.monitor.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.monitor.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.monitor.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.monitor.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.monitor.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear monitor\r\n\t\t\t$scope.monitor.paginated = {};\r\n\t\t\t$scope.monitor.results = null;\r\n\t\t\t$scope.monitor.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.monitor.paginated = data.data;\r\n\t\t\t\t$scope.monitor.paginated.show = true;\r\n\r\n\t\t\t\t$scope.monitor.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.monitor.busy || ($scope.monitor.page > $scope.monitor.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.monitor.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.monitor.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.monitor.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.monitor.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.monitor.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear monitor\r\n\t\t\t$scope.monitor.paginated = {};\r\n\t\t\t$scope.monitor.results = null;\r\n\t\t\t$scope.monitor.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.monitor.paginated = data.data;\r\n\t\t\t\t$scope.monitor.paginated.show = true;\r\n\r\n\t\t\t\t$scope.monitor.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.monitor.busy || ($scope.monitor.page > $scope.monitor.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.monitor.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.monitor.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.monitor.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.monitor.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.monitor.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for monitor\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.monitor = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.monitor.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.monitor.paginated = data.data;\r\n\t\t\t\t$scope.monitor.paginated.show = true;\r\n\r\n\t\t\t\t$scope.monitor.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.monitor.busy || ($scope.monitor.page > $scope.monitor.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.monitor.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.monitor.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.monitor.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.monitor.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.monitor.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.monitor.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.monitor.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.monitor.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Monitor';\r\n\t\t\tquery.table_name = 'monitors';\r\n\t\t\tquery.property_code = 'PMON';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.monitor.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('monitorUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Monitor', function($scope, $state, $stateParams, Monitor){\r\n\t\t$scope.asset = 'Monitor';\r\n\r\n\t\tMonitor.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('monitorUnitToolbarController', ['$scope', '$state', '$stateParams', 'Monitor', function($scope, $state, $stateParams, Monitor){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tMonitor.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addMemoryDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Memory', function($scope, $state, $mdDialog, Preloader, Memory){\r\n\t\t$scope.memory = {};\r\n\r\n\t\t$scope.memory.types = [\r\n\t\t\t{'type': 'DDR2 / DIMM'},\r\n\t\t\t{'type': 'DDR2 / SO-DIMM'},\r\n\t\t\t{'type': 'DDR3 / DIMM'},\r\n\t\t\t{'type': 'DDR3 / SO-DIMM'},\r\n\t\t\t{'type': 'DDR4 / DIMM'},\r\n\t\t\t{'type': 'DDR4 / SO-DIMM'},\r\n\t\t];\r\n\r\n\t\t$scope.memory.sizes = [\r\n\t\t\t{'size': '1GB'},\r\n\t\t\t{'size': '2GB'},\r\n\t\t\t{'size': '4GB'},\r\n\t\t\t{'size': '8GB'},\r\n\t\t];\r\n\r\n\t\t$scope.memory.DDR2_speeds = [\r\n\t\t\t{'speed':'400MHz'},\r\n\t\t\t{'speed':'533MHz'},\r\n\t\t\t{'speed':'667MHz'},\r\n\t\t\t{'speed':'800MHz'},\r\n\t\t\t{'speed':'1066MHz'},\r\n\t\t];\r\n\r\n\t\t$scope.memory.DDR3_speeds = [\r\n\t\t\t{'speed':'800MHz'},\r\n\t\t\t{'speed':'1066MHz'},\r\n\t\t\t{'speed':'1333MHz'},\r\n\t\t\t{'speed':'1600MHz'},\r\n\t\t\t{'speed':'1866MHz'},\r\n\t\t\t{'speed':'2133MHz'},\r\n\t\t];\r\n\r\n\t\t$scope.memory.DDR4_speeds = [\r\n\t\t\t{'speed':'800MHz'},\r\n\t\t\t{'speed':'1066MHz'},\r\n\t\t\t{'speed':'1333MHz'},\r\n\t\t\t{'speed':'1600MHz'},\r\n\t\t\t{'speed':'1866MHz'},\r\n\t\t\t{'speed':'2133MHz'},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tMemory.store($scope.memory)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('memoryContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Memory', function($scope, $state, $stateParams, $mdDialog, Preloader, Memory){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.memory.paginated = {};\r\n\t\t\t$scope.memory.page = 2;\r\n\t\t\tMemory.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.memory.paginated = data.data;\r\n\t\t\t\t\t$scope.memory.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Memory';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addMemoryDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-memory-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Headset\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.memory = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.memory.page = 2;\r\n\r\n\t\tMemory.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.memory.paginated = data.data;\r\n\t\t\t\t$scope.memory.paginated.show = true;\r\n\r\n\t\t\t\t$scope.memory.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.memory.busy || ($scope.memory.page > $scope.memory.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.memory.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tMemory.paginate($scope.memory.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.memory.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.memory.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.memory.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.memory.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.memory.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tMemory.search($scope.memory)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.memory.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('memoryToolbarController', ['$scope', '$stateParams', 'Memory', function($scope, $stateParams, Memory){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Memory';\r\n\t}]);","adminModule\r\n\t.controller('memoryUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Memory';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear memory\r\n\t\t\t$scope.memory.paginated = {};\r\n\t\t\t$scope.memory.results = null;\r\n\t\t\t$scope.memory.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.memory.paginated = data.data;\r\n\t\t\t\t$scope.memory.paginated.show = true;\r\n\r\n\t\t\t\t$scope.memory.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.memory.busy || ($scope.memory.page > $scope.memory.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.memory.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.memory.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.memory.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.memory.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.memory.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear memory\r\n\t\t\t$scope.memory.paginated = {};\r\n\t\t\t$scope.memory.results = null;\r\n\t\t\t$scope.memory.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.memory.paginated = data.data;\r\n\t\t\t\t$scope.memory.paginated.show = true;\r\n\r\n\t\t\t\t$scope.memory.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.memory.busy || ($scope.memory.page > $scope.memory.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.memory.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.memory.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.memory.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.memory.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.memory.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear memory\r\n\t\t\t$scope.memory.paginated = {};\r\n\t\t\t$scope.memory.results = null;\r\n\t\t\t$scope.memory.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.memory.paginated = data.data;\r\n\t\t\t\t$scope.memory.paginated.show = true;\r\n\r\n\t\t\t\t$scope.memory.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.memory.busy || ($scope.memory.page > $scope.memory.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.memory.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.memory.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.memory.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.memory.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.memory.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for memory\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.memory = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.memory.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.memory.paginated = data.data;\r\n\t\t\t\t$scope.memory.paginated.show = true;\r\n\r\n\t\t\t\t$scope.memory.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.memory.busy || ($scope.memory.page > $scope.memory.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.memory.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.memory.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.memory.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.memory.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.memory.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.memory.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.memory.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.memory.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Memory';\r\n\t\t\tquery.table_name = 'memories';\r\n\t\t\tquery.property_code = 'PRAM';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.memory.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('memoryUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Memory', function($scope, $state, $stateParams, Memory){\r\n\t\t$scope.asset = 'Memory';\r\n\r\n\t\tMemory.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('memoryUnitToolbarController', ['$scope', '$state', '$stateParams', 'Memory', function($scope, $state, $stateParams, Memory){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tMemory.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.size;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addMouseDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Mouse', function($scope, $state, $mdDialog, Preloader, Mouse){\r\n\t\t$scope.mouse = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tMouse.store($scope.mouse)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('mouseContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Mouse', function($scope, $state, $stateParams, $mdDialog, Preloader, Mouse){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.mouse.paginated = {};\r\n\t\t\t$scope.mouse.page = 2;\r\n\t\t\tMouse.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.mouse.paginated = data.data;\r\n\t\t\t\t\t$scope.mouse.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Mouse';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addMouseDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-mouse-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Headset\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.mouse = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.mouse.page = 2;\r\n\r\n\t\tMouse.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.mouse.paginated = data.data;\r\n\t\t\t\t$scope.mouse.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mouse.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mouse.busy || ($scope.mouse.page > $scope.mouse.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mouse.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tMouse.paginate($scope.mouse.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mouse.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mouse.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mouse.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.mouse.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.mouse.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tMouse.search($scope.mouse)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.mouse.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('mouseToolbarController', ['$scope', '$stateParams', 'Mouse', function($scope, $stateParams, Mouse){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Mouse';\r\n\t}]);","adminModule\r\n\t.controller('mouseUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Mouse';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear mouse\r\n\t\t\t$scope.mouse.paginated = {};\r\n\t\t\t$scope.mouse.results = null;\r\n\t\t\t$scope.mouse.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.mouse.paginated = data.data;\r\n\t\t\t\t$scope.mouse.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mouse.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mouse.busy || ($scope.mouse.page > $scope.mouse.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mouse.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.mouse.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mouse.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mouse.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mouse.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear mouse\r\n\t\t\t$scope.mouse.paginated = {};\r\n\t\t\t$scope.mouse.results = null;\r\n\t\t\t$scope.mouse.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.mouse.paginated = data.data;\r\n\t\t\t\t$scope.mouse.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mouse.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mouse.busy || ($scope.mouse.page > $scope.mouse.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mouse.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.mouse.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mouse.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mouse.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mouse.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear mouse\r\n\t\t\t$scope.mouse.paginated = {};\r\n\t\t\t$scope.mouse.results = null;\r\n\t\t\t$scope.mouse.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.mouse.paginated = data.data;\r\n\t\t\t\t$scope.mouse.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mouse.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mouse.busy || ($scope.mouse.page > $scope.mouse.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mouse.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.mouse.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mouse.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mouse.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mouse.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for mouse\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.mouse = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.mouse.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.mouse.paginated = data.data;\r\n\t\t\t\t$scope.mouse.paginated.show = true;\r\n\r\n\t\t\t\t$scope.mouse.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.mouse.busy || ($scope.mouse.page > $scope.mouse.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.mouse.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.mouse.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.mouse.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.mouse.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.mouse.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.mouse.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.mouse.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.mouse.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Mouse';\r\n\t\t\tquery.table_name = 'mice';\r\n\t\t\tquery.property_code = 'PMSE';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.mouse.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('mouseUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Mouse', function($scope, $state, $stateParams, Mouse){\r\n\t\t$scope.asset = 'Mouse';\r\n\r\n\t\tMouse.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('mouseUnitToolbarController', ['$scope', '$state', '$stateParams', 'Mouse', function($scope, $state, $stateParams, Mouse){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tMouse.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addNetworkSwitchDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'NetworkSwitch', function($scope, $state, $mdDialog, Preloader, NetworkSwitch){\r\n\t\t$scope.networkSwitch = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tNetworkSwitch.store($scope.networkSwitch)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('networkSwitchContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'NetworkSwitch', function($scope, $state, $stateParams, $mdDialog, Preloader, NetworkSwitch){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.networkSwitch.paginated = {};\r\n\t\t\t$scope.networkSwitch.page = 2;\r\n\t\t\tNetworkSwitch.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.networkSwitch.paginated = data.data;\r\n\t\t\t\t\t$scope.networkSwitch.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Network Switch';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addNetworkSwitchDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-network-switch-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for networkSwitch\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.networkSwitch = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.networkSwitch.page = 2;\r\n\r\n\t\tNetworkSwitch.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.networkSwitch.paginated = data.data;\r\n\t\t\t\t$scope.networkSwitch.paginated.show = true;\r\n\r\n\t\t\t\t$scope.networkSwitch.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.networkSwitch.busy || ($scope.networkSwitch.page > $scope.networkSwitch.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.networkSwitch.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tNetworkSwitch.paginate($scope.networkSwitch.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.networkSwitch.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.networkSwitch.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.networkSwitch.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.networkSwitch.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.networkSwitch.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tNetworkSwitch.search($scope.networkSwitch)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.networkSwitch.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('networkSwitchToolbarController', ['$scope', 'NetworkSwitch', function($scope, NetworkSwitch){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Network Switch';\r\n\t}]);","adminModule\r\n\t.controller('networkSwitchUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Network Switch';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear networkSwitch\r\n\t\t\t$scope.networkSwitch.paginated = {};\r\n\t\t\t$scope.networkSwitch.results = null;\r\n\t\t\t$scope.networkSwitch.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.networkSwitch.paginated = data.data;\r\n\t\t\t\t$scope.networkSwitch.paginated.show = true;\r\n\r\n\t\t\t\t$scope.networkSwitch.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.networkSwitch.busy || ($scope.networkSwitch.page > $scope.networkSwitch.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.networkSwitch.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.networkSwitch.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.networkSwitch.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.networkSwitch.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.networkSwitch.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear networkSwitch\r\n\t\t\t$scope.networkSwitch.paginated = {};\r\n\t\t\t$scope.networkSwitch.results = null;\r\n\t\t\t$scope.networkSwitch.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.networkSwitch.paginated = data.data;\r\n\t\t\t\t$scope.networkSwitch.paginated.show = true;\r\n\r\n\t\t\t\t$scope.networkSwitch.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.networkSwitch.busy || ($scope.networkSwitch.page > $scope.networkSwitch.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.networkSwitch.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.networkSwitch.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.networkSwitch.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.networkSwitch.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.networkSwitch.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear networkSwitch\r\n\t\t\t$scope.networkSwitch.paginated = {};\r\n\t\t\t$scope.networkSwitch.results = null;\r\n\t\t\t$scope.networkSwitch.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.networkSwitch.paginated = data.data;\r\n\t\t\t\t$scope.networkSwitch.paginated.show = true;\r\n\r\n\t\t\t\t$scope.networkSwitch.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.networkSwitch.busy || ($scope.networkSwitch.page > $scope.networkSwitch.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.networkSwitch.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.networkSwitch.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.networkSwitch.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.networkSwitch.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.networkSwitch.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for networkSwitch\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.networkSwitch = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.networkSwitch.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.networkSwitch.paginated = data.data;\r\n\t\t\t\t$scope.networkSwitch.paginated.show = true;\r\n\r\n\t\t\t\t$scope.networkSwitch.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.networkSwitch.busy || ($scope.networkSwitch.page > $scope.networkSwitch.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.networkSwitch.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.networkSwitch.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.networkSwitch.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.networkSwitch.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.networkSwitch.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.networkSwitch.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.networkSwitch.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.networkSwitch.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Network Switch';\r\n\t\t\tquery.table_name = 'network_switches';\r\n\t\t\tquery.property_code = 'PNSW';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.networkSwitch.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('networkSwitchUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'NetworkSwitch', function($scope, $state, $stateParams, NetworkSwitch){\r\n\t\t$scope.asset = 'Network Switch';\r\n\r\n\t\tNetworkSwitch.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('networkSwitchUnitToolbarController', ['$scope', '$state', '$stateParams', 'NetworkSwitch', function($scope, $state, $stateParams, NetworkSwitch){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tNetworkSwitch.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addPortableHardDiskDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'PortableHardDisk', function($scope, $state, $mdDialog, Preloader, PortableHardDisk){\r\n\t\t$scope.portableHardDisk = {};\r\n\r\n\t\t$scope.portableHardDisk.capacities = [\r\n\t\t\t{'capacity':'500GB'},\r\n\t\t\t{'capacity':'650GB'},\r\n\t\t\t{'capacity':'1.0TB'},\r\n\t\t\t{'capacity':'2.0TB'},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tPortableHardDisk.store($scope.portableHardDisk)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('portableHardDiskContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'PortableHardDisk', function($scope, $state, $stateParams, $mdDialog, Preloader, PortableHardDisk){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.portableHardDisk.paginated = {};\r\n\t\t\t$scope.portableHardDisk.page = 2;\r\n\t\t\tPortableHardDisk.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.portableHardDisk.paginated = data.data;\r\n\t\t\t\t\t$scope.portableHardDisk.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Portable Hard Disk';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addPortableHardDiskDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-portable-hard-disk-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for portableHardDisk\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.portableHardDisk = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.portableHardDisk.page = 2;\r\n\r\n\t\tPortableHardDisk.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.portableHardDisk.paginated = data.data;\r\n\t\t\t\t$scope.portableHardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.portableHardDisk.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.portableHardDisk.busy || ($scope.portableHardDisk.page > $scope.portableHardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.portableHardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tPortableHardDisk.paginate($scope.portableHardDisk.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.portableHardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.portableHardDisk.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.portableHardDisk.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tPortableHardDisk.search($scope.portableHardDisk)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.portableHardDisk.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('portableHardDiskToolbarController', ['$scope', 'PortableHardDisk', function($scope, PortableHardDisk){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Portable Hard Disk';\r\n\t}]);","adminModule\r\n\t.controller('portableHardDiskUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Portable Hard Disk';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear portableHardDisk\r\n\t\t\t$scope.portableHardDisk.paginated = {};\r\n\t\t\t$scope.portableHardDisk.results = null;\r\n\t\t\t$scope.portableHardDisk.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.portableHardDisk.paginated = data.data;\r\n\t\t\t\t$scope.portableHardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.portableHardDisk.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.portableHardDisk.busy || ($scope.portableHardDisk.page > $scope.portableHardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.portableHardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.portableHardDisk.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.portableHardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear portableHardDisk\r\n\t\t\t$scope.portableHardDisk.paginated = {};\r\n\t\t\t$scope.portableHardDisk.results = null;\r\n\t\t\t$scope.portableHardDisk.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.portableHardDisk.paginated = data.data;\r\n\t\t\t\t$scope.portableHardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.portableHardDisk.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.portableHardDisk.busy || ($scope.portableHardDisk.page > $scope.portableHardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.portableHardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.portableHardDisk.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.portableHardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear portableHardDisk\r\n\t\t\t$scope.portableHardDisk.paginated = {};\r\n\t\t\t$scope.portableHardDisk.results = null;\r\n\t\t\t$scope.portableHardDisk.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.portableHardDisk.paginated = data.data;\r\n\t\t\t\t$scope.portableHardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.portableHardDisk.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.portableHardDisk.busy || ($scope.portableHardDisk.page > $scope.portableHardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.portableHardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.portableHardDisk.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.portableHardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for portableHardDisk\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.portableHardDisk = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.portableHardDisk.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.portableHardDisk.paginated = data.data;\r\n\t\t\t\t$scope.portableHardDisk.paginated.show = true;\r\n\r\n\t\t\t\t$scope.portableHardDisk.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.portableHardDisk.busy || ($scope.portableHardDisk.page > $scope.portableHardDisk.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.portableHardDisk.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.portableHardDisk.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.portableHardDisk.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.portableHardDisk.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.portableHardDisk.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.portableHardDisk.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.portableHardDisk.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Portable Hard Disk';\r\n\t\t\tquery.table_name = 'portable_hard_disks';\r\n\t\t\tquery.property_code = 'PPHD';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.portableHardDisk.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('portableHardDiskUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'PortableHardDisk', function($scope, $state, $stateParams, PortableHardDisk){\r\n\t\t$scope.asset = 'Portable Hard Disk';\r\n\r\n\t\tPortableHardDisk.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('portableHardDiskUnitToolbarController', ['$scope', '$state', '$stateParams', 'PortableHardDisk', function($scope, $state, $stateParams, PortableHardDisk){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tPortableHardDisk.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.model;\r\n\t\t\t\t$scope.toolbar.childState = data.capacity;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addOtherComponentDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'OtherComponent', function($scope, $state, $mdDialog, Preloader, OtherComponent){\r\n\t\t$scope.otherComponent = {};\r\n\r\n\t\t$scope.otherComponent.sizes = [\r\n\t\t\t{'size':'1GB'},\r\n\t\t\t{'size':'2GB'},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tOtherComponent.store($scope.otherComponent)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('otherComponentContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'OtherComponent', function($scope, $state, $stateParams, $mdDialog, Preloader, OtherComponent){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.otherComponent.paginated = {};\r\n\t\t\t$scope.otherComponent.page = 2;\r\n\t\t\tOtherComponent.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.otherComponent.paginated = data.data;\r\n\t\t\t\t\t$scope.otherComponent.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Other Component';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addOtherComponentDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-other-component-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for otherComponent\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.otherComponent = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.otherComponent.page = 2;\r\n\r\n\t\tOtherComponent.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.otherComponent.paginated = data.data;\r\n\t\t\t\t$scope.otherComponent.paginated.show = true;\r\n\r\n\t\t\t\t$scope.otherComponent.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.otherComponent.busy || ($scope.otherComponent.page > $scope.otherComponent.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.otherComponent.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tOtherComponent.paginate($scope.otherComponent.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.otherComponent.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.otherComponent.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.otherComponent.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.otherComponent.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.otherComponent.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tOtherComponent.search($scope.otherComponent)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.otherComponent.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('otherComponentToolbarController', ['$scope', '$stateParams', 'OtherComponent', function($scope, $stateParams, OtherComponent){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Other Component';\r\n\t}]);","adminModule\r\n\t.controller('otherComponentUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Other Component';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear otherComponent\r\n\t\t\t$scope.otherComponent.paginated = {};\r\n\t\t\t$scope.otherComponent.results = null;\r\n\t\t\t$scope.otherComponent.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.otherComponent.paginated = data.data;\r\n\t\t\t\t$scope.otherComponent.paginated.show = true;\r\n\r\n\t\t\t\t$scope.otherComponent.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.otherComponent.busy || ($scope.otherComponent.page > $scope.otherComponent.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.otherComponent.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.otherComponent.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.otherComponent.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.otherComponent.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.otherComponent.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear otherComponent\r\n\t\t\t$scope.otherComponent.paginated = {};\r\n\t\t\t$scope.otherComponent.results = null;\r\n\t\t\t$scope.otherComponent.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.otherComponent.paginated = data.data;\r\n\t\t\t\t$scope.otherComponent.paginated.show = true;\r\n\r\n\t\t\t\t$scope.otherComponent.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.otherComponent.busy || ($scope.otherComponent.page > $scope.otherComponent.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.otherComponent.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.otherComponent.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.otherComponent.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.otherComponent.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.otherComponent.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear otherComponent\r\n\t\t\t$scope.otherComponent.paginated = {};\r\n\t\t\t$scope.otherComponent.results = null;\r\n\t\t\t$scope.otherComponent.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.otherComponent.paginated = data.data;\r\n\t\t\t\t$scope.otherComponent.paginated.show = true;\r\n\r\n\t\t\t\t$scope.otherComponent.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.otherComponent.busy || ($scope.otherComponent.page > $scope.otherComponent.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.otherComponent.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.otherComponent.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.otherComponent.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.otherComponent.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.otherComponent.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for otherComponent\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.otherComponent = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.otherComponent.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.otherComponent.paginated = data.data;\r\n\t\t\t\t$scope.otherComponent.paginated.show = true;\r\n\r\n\t\t\t\t$scope.otherComponent.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.otherComponent.busy || ($scope.otherComponent.page > $scope.otherComponent.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.otherComponent.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.otherComponent.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.otherComponent.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.otherComponent.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.otherComponent.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.otherComponent.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.otherComponent.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.otherComponent.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Other Component';\r\n\t\t\tquery.table_name = 'other_components';\r\n\t\t\tquery.property_code = 'POTH';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.otherComponent.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('otherComponentUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'OtherComponent', function($scope, $state, $stateParams, OtherComponent){\r\n\t\t$scope.asset = 'Component';\r\n\r\n\t\tOtherComponent.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('otherComponentUnitToolbarController', ['$scope', '$state', '$stateParams', 'OtherComponent', function($scope, $state, $stateParams, OtherComponent){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tOtherComponent.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addPrinterDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Printer', function($scope, $state, $mdDialog, Preloader, Printer){\r\n\t\t$scope.printer = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tPrinter.store($scope.printer)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('printerContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Printer', function($scope, $state, $stateParams, $mdDialog, Preloader, Printer){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.printer.paginated = {};\r\n\t\t\t$scope.printer.page = 2;\r\n\t\t\tPrinter.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.printer.paginated = data.data;\r\n\t\t\t\t\t$scope.printer.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Printer';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addPrinterDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-printer-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Headset\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.printer = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.printer.page = 2;\r\n\r\n\t\tPrinter.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.printer.paginated = data.data;\r\n\t\t\t\t$scope.printer.paginated.show = true;\r\n\r\n\t\t\t\t$scope.printer.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.printer.busy || ($scope.printer.page > $scope.printer.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.printer.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tPrinter.paginate($scope.printer.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.printer.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.printer.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.printer.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.printer.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.printer.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tPrinter.search($scope.printer)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.printer.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('printerToolbarController', ['$scope', '$stateParams', 'Printer', function($scope, $stateParams, Printer){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Printer';\r\n\t}]);","adminModule\r\n\t.controller('printerUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Printer';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear printer\r\n\t\t\t$scope.printer.paginated = {};\r\n\t\t\t$scope.printer.results = null;\r\n\t\t\t$scope.printer.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.printer.paginated = data.data;\r\n\t\t\t\t$scope.printer.paginated.show = true;\r\n\r\n\t\t\t\t$scope.printer.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.printer.busy || ($scope.printer.page > $scope.printer.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.printer.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.printer.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.printer.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.printer.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.printer.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear printer\r\n\t\t\t$scope.printer.paginated = {};\r\n\t\t\t$scope.printer.results = null;\r\n\t\t\t$scope.printer.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.printer.paginated = data.data;\r\n\t\t\t\t$scope.printer.paginated.show = true;\r\n\r\n\t\t\t\t$scope.printer.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.printer.busy || ($scope.printer.page > $scope.printer.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.printer.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.printer.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.printer.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.printer.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.printer.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear printer\r\n\t\t\t$scope.printer.paginated = {};\r\n\t\t\t$scope.printer.results = null;\r\n\t\t\t$scope.printer.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.printer.paginated = data.data;\r\n\t\t\t\t$scope.printer.paginated.show = true;\r\n\r\n\t\t\t\t$scope.printer.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.printer.busy || ($scope.printer.page > $scope.printer.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.printer.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.printer.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.printer.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.printer.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.printer.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for printer\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.printer = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.printer.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.printer.paginated = data.data;\r\n\t\t\t\t$scope.printer.paginated.show = true;\r\n\r\n\t\t\t\t$scope.printer.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.printer.busy || ($scope.printer.page > $scope.printer.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.printer.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.printer.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.printer.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.printer.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.printer.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.printer.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.printer.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.printer.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Printer';\r\n\t\t\tquery.table_name = 'printers';\r\n\t\t\tquery.property_code = 'PPRT';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.printer.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('printerUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Printer', function($scope, $state, $stateParams, Printer){\r\n\t\t$scope.asset = 'Printer';\r\n\r\n\t\tPrinter.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('printerUnitToolbarController', ['$scope', '$state', '$stateParams', 'Printer', function($scope, $state, $stateParams, Printer){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tPrinter.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addRouterDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Router', function($scope, $state, $mdDialog, Preloader, Router){\r\n\t\t$scope.router = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tRouter.store($scope.router)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('routerContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Router', function($scope, $state, $stateParams, $mdDialog, Preloader, Router){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.router.paginated = {};\r\n\t\t\t$scope.router.page = 2;\r\n\t\t\tRouter.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.router.paginated = data.data;\r\n\t\t\t\t\t$scope.router.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Router';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addRouterDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-router-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for router\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.router = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.router.page = 2;\r\n\r\n\t\tRouter.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.router.paginated = data.data;\r\n\t\t\t\t$scope.router.paginated.show = true;\r\n\r\n\t\t\t\t$scope.router.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.router.busy || ($scope.router.page > $scope.router.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.router.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tRouter.paginate($scope.router.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.router.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.router.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.router.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.router.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.router.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tRouter.search($scope.router)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.router.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('routerToolbarController', ['$scope', 'Router', function($scope, Router){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Router';\r\n\t}]);","adminModule\r\n\t.controller('routerUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Router';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear router\r\n\t\t\t$scope.router.paginated = {};\r\n\t\t\t$scope.router.results = null;\r\n\t\t\t$scope.router.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.router.paginated = data.data;\r\n\t\t\t\t$scope.router.paginated.show = true;\r\n\r\n\t\t\t\t$scope.router.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.router.busy || ($scope.router.page > $scope.router.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.router.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.router.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.router.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.router.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.router.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear router\r\n\t\t\t$scope.router.paginated = {};\r\n\t\t\t$scope.router.results = null;\r\n\t\t\t$scope.router.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.router.paginated = data.data;\r\n\t\t\t\t$scope.router.paginated.show = true;\r\n\r\n\t\t\t\t$scope.router.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.router.busy || ($scope.router.page > $scope.router.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.router.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.router.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.router.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.router.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.router.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear router\r\n\t\t\t$scope.router.paginated = {};\r\n\t\t\t$scope.router.results = null;\r\n\t\t\t$scope.router.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.router.paginated = data.data;\r\n\t\t\t\t$scope.router.paginated.show = true;\r\n\r\n\t\t\t\t$scope.router.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.router.busy || ($scope.router.page > $scope.router.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.router.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.router.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.router.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.router.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.router.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for router\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.router = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.router.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.router.paginated = data.data;\r\n\t\t\t\t$scope.router.paginated.show = true;\r\n\r\n\t\t\t\t$scope.router.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.router.busy || ($scope.router.page > $scope.router.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.router.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.router.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.router.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.router.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.router.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.router.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.router.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.router.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Router';\r\n\t\t\tquery.table_name = 'routers';\r\n\t\t\tquery.property_code = 'PRTR';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.router.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('routerUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Router', function($scope, $state, $stateParams, Router){\r\n\t\t$scope.asset = 'Router';\r\n\r\n\t\tRouter.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('routerUnitToolbarController', ['$scope', '$state', '$stateParams', 'Router', function($scope, $state, $stateParams, Router){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tRouter.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addProjectorDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Projector', function($scope, $state, $mdDialog, Preloader, Projector){\r\n\t\t$scope.projector = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tProjector.store($scope.projector)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('projectorContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Projector', function($scope, $state, $stateParams, $mdDialog, Preloader, Projector){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.projector.paginated = {};\r\n\t\t\t$scope.projector.page = 2;\r\n\t\t\tProjector.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.projector.paginated = data.data;\r\n\t\t\t\t\t$scope.projector.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add projector';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addProjectorDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-projector-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for projector\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.projector = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.projector.page = 2;\r\n\r\n\t\tProjector.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.projector.paginated = data.data;\r\n\t\t\t\t$scope.projector.paginated.show = true;\r\n\r\n\t\t\t\t$scope.projector.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.projector.busy || ($scope.projector.page > $scope.projector.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.projector.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tProjector.paginate($scope.projector.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.projector.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.projector.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.projector.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.projector.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.projector.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tProjector.search($scope.projector)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.projector.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('projectorToolbarController', ['$scope', 'Projector', function($scope, Projector){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Projector';\r\n\t}]);","adminModule\r\n\t.controller('projectorUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Projector';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear projector\r\n\t\t\t$scope.projector.paginated = {};\r\n\t\t\t$scope.projector.results = null;\r\n\t\t\t$scope.projector.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.projector.paginated = data.data;\r\n\t\t\t\t$scope.projector.paginated.show = true;\r\n\r\n\t\t\t\t$scope.projector.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.projector.busy || ($scope.projector.page > $scope.projector.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.projector.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.projector.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.projector.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.projector.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.projector.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear projector\r\n\t\t\t$scope.projector.paginated = {};\r\n\t\t\t$scope.projector.results = null;\r\n\t\t\t$scope.projector.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.projector.paginated = data.data;\r\n\t\t\t\t$scope.projector.paginated.show = true;\r\n\r\n\t\t\t\t$scope.projector.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.projector.busy || ($scope.projector.page > $scope.projector.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.projector.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.projector.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.projector.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.projector.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.projector.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear projector\r\n\t\t\t$scope.projector.paginated = {};\r\n\t\t\t$scope.projector.results = null;\r\n\t\t\t$scope.projector.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.projector.paginated = data.data;\r\n\t\t\t\t$scope.projector.paginated.show = true;\r\n\r\n\t\t\t\t$scope.projector.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.projector.busy || ($scope.projector.page > $scope.projector.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.projector.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.projector.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.projector.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.projector.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.projector.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for projector\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.projector = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.projector.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.projector.paginated = data.data;\r\n\t\t\t\t$scope.projector.paginated.show = true;\r\n\r\n\t\t\t\t$scope.projector.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.projector.busy || ($scope.projector.page > $scope.projector.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.projector.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.projector.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.projector.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.projector.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.projector.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.projector.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.projector.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.projector.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Projector';\r\n\t\t\tquery.table_name = 'projectors';\r\n\t\t\tquery.property_code = 'PPRJ';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.projector.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('projectorUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Projector', function($scope, $state, $stateParams, Projector){\r\n\t\t$scope.asset = 'Projector';\r\n\r\n\t\tProjector.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('projectorUnitToolbarController', ['$scope', '$state', '$stateParams', 'Projector', function($scope, $state, $stateParams, Projector){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tProjector.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addSpeakerDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Speaker', function($scope, $state, $mdDialog, Preloader, Speaker){\r\n\t\t$scope.speaker = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tSpeaker.store($scope.speaker)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('speakerContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Speaker', function($scope, $state, $stateParams, $mdDialog, Preloader, Speaker){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.speaker.paginated = {};\r\n\t\t\t$scope.speaker.page = 2;\r\n\t\t\tSpeaker.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.speaker.paginated = data.data;\r\n\t\t\t\t\t$scope.speaker.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Speaker';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addSpeakerDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-speaker-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for speaker\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.speaker = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.speaker.page = 2;\r\n\r\n\t\tSpeaker.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.speaker.paginated = data.data;\r\n\t\t\t\t$scope.speaker.paginated.show = true;\r\n\r\n\t\t\t\t$scope.speaker.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.speaker.busy || ($scope.speaker.page > $scope.speaker.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.speaker.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tSpeaker.paginate($scope.speaker.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.speaker.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.speaker.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.speaker.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.speaker.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.speaker.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tSpeaker.search($scope.speaker)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.speaker.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('speakerToolbarController', ['$scope', 'Speaker', function($scope, Speaker){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Speaker';\r\n\t}]);","adminModule\r\n\t.controller('speakerUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Speaker';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear speaker\r\n\t\t\t$scope.speaker.paginated = {};\r\n\t\t\t$scope.speaker.results = null;\r\n\t\t\t$scope.speaker.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.speaker.paginated = data.data;\r\n\t\t\t\t$scope.speaker.paginated.show = true;\r\n\r\n\t\t\t\t$scope.speaker.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.speaker.busy || ($scope.speaker.page > $scope.speaker.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.speaker.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.speaker.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.speaker.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.speaker.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.speaker.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear speaker\r\n\t\t\t$scope.speaker.paginated = {};\r\n\t\t\t$scope.speaker.results = null;\r\n\t\t\t$scope.speaker.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.speaker.paginated = data.data;\r\n\t\t\t\t$scope.speaker.paginated.show = true;\r\n\r\n\t\t\t\t$scope.speaker.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.speaker.busy || ($scope.speaker.page > $scope.speaker.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.speaker.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.speaker.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.speaker.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.speaker.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.speaker.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear speaker\r\n\t\t\t$scope.speaker.paginated = {};\r\n\t\t\t$scope.speaker.results = null;\r\n\t\t\t$scope.speaker.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.speaker.paginated = data.data;\r\n\t\t\t\t$scope.speaker.paginated.show = true;\r\n\r\n\t\t\t\t$scope.speaker.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.speaker.busy || ($scope.speaker.page > $scope.speaker.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.speaker.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.speaker.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.speaker.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.speaker.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.speaker.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for speaker\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.speaker = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.speaker.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.speaker.paginated = data.data;\r\n\t\t\t\t$scope.speaker.paginated.show = true;\r\n\r\n\t\t\t\t$scope.speaker.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.speaker.busy || ($scope.speaker.page > $scope.speaker.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.speaker.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.speaker.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.speaker.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.speaker.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.speaker.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.speaker.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.speaker.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.speaker.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Speaker';\r\n\t\t\tquery.table_name = 'speakers';\r\n\t\t\tquery.property_code = 'PSPK';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.speaker.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('speakerUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Speaker', function($scope, $state, $stateParams, Speaker){\r\n\t\t$scope.asset = 'Speaker';\r\n\r\n\t\tSpeaker.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('speakerUnitToolbarController', ['$scope', '$state', '$stateParams', 'Speaker', function($scope, $state, $stateParams, Speaker){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tSpeaker.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addScannerDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Scanner', function($scope, $state, $mdDialog, Preloader, Scanner){\r\n\t\t$scope.scanner = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tScanner.store($scope.scanner)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('scannerContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Scanner', function($scope, $state, $stateParams, $mdDialog, Preloader, Scanner){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.scanner.paginated = {};\r\n\t\t\t$scope.scanner.page = 2;\r\n\t\t\tScanner.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.scanner.paginated = data.data;\r\n\t\t\t\t\t$scope.scanner.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Scanner';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addScannerDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-scanner-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for Scanner\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.scanner = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.scanner.page = 2;\r\n\r\n\t\tScanner.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.scanner.paginated = data.data;\r\n\t\t\t\t$scope.scanner.paginated.show = true;\r\n\r\n\t\t\t\t$scope.scanner.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.scanner.busy || ($scope.scanner.page > $scope.scanner.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.scanner.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tScanner.paginate($scope.scanner.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.scanner.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.scanner.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.scanner.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.scanner.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.scanner.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tScanner.search($scope.scanner)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.scanner.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('scannerToolbarController', ['$scope', '$stateParams', 'Scanner', function($scope, $stateParams, Scanner){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Scanner';\r\n\t}]);","adminModule\r\n\t.controller('scannerUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Scanner';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear scanner\r\n\t\t\t$scope.scanner.paginated = {};\r\n\t\t\t$scope.scanner.results = null;\r\n\t\t\t$scope.scanner.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.scanner.paginated = data.data;\r\n\t\t\t\t$scope.scanner.paginated.show = true;\r\n\r\n\t\t\t\t$scope.scanner.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.scanner.busy || ($scope.scanner.page > $scope.scanner.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.scanner.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.scanner.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.scanner.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.scanner.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.scanner.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear scanner\r\n\t\t\t$scope.scanner.paginated = {};\r\n\t\t\t$scope.scanner.results = null;\r\n\t\t\t$scope.scanner.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.scanner.paginated = data.data;\r\n\t\t\t\t$scope.scanner.paginated.show = true;\r\n\r\n\t\t\t\t$scope.scanner.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.scanner.busy || ($scope.scanner.page > $scope.scanner.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.scanner.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.scanner.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.scanner.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.scanner.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.scanner.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear scanner\r\n\t\t\t$scope.scanner.paginated = {};\r\n\t\t\t$scope.scanner.results = null;\r\n\t\t\t$scope.scanner.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.scanner.paginated = data.data;\r\n\t\t\t\t$scope.scanner.paginated.show = true;\r\n\r\n\t\t\t\t$scope.scanner.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.scanner.busy || ($scope.scanner.page > $scope.scanner.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.scanner.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.scanner.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.scanner.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.scanner.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.scanner.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for scanner\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.scanner = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.scanner.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.scanner.paginated = data.data;\r\n\t\t\t\t$scope.scanner.paginated.show = true;\r\n\r\n\t\t\t\t$scope.scanner.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.scanner.busy || ($scope.scanner.page > $scope.scanner.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.scanner.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.scanner.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.scanner.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.scanner.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.scanner.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.scanner.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.scanner.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.scanner.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Scanner';\r\n\t\t\tquery.table_name = 'scanners';\r\n\t\t\tquery.property_code = 'PSCN';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.scanner.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('scannerUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Scanner', function($scope, $state, $stateParams, Scanner){\r\n\t\t$scope.asset = 'Scanner';\r\n\r\n\t\tScanner.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('scannerUnitToolbarController', ['$scope', '$state', '$stateParams', 'Scanner', function($scope, $state, $stateParams, Scanner){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tScanner.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addSoftwareDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Software', function($scope, $state, $mdDialog, Preloader, Software){\r\n\t\t$scope.software = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tSoftware.store($scope.software)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('softwareContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Software', function($scope, $state, $stateParams, $mdDialog, Preloader, Software){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.software.paginated = {};\r\n\t\t\t$scope.software.page = 2;\r\n\t\t\tSoftware.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.software.paginated = data.data;\r\n\t\t\t\t\t$scope.software.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Software';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addSoftwareDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-software-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for software\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.software = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.software.page = 2;\r\n\r\n\t\tSoftware.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.software.paginated = data.data;\r\n\t\t\t\t$scope.software.paginated.show = true;\r\n\r\n\t\t\t\t$scope.software.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.software.busy || ($scope.software.page > $scope.software.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.software.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tSoftware.paginate($scope.software.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.software.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.software.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.software.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.software.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.software.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tSoftware.search($scope.software)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.software.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('softwareToolbarController', ['$scope', '$stateParams', 'Software', function($scope, $stateParams, Software){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Software';\r\n\t}]);","adminModule\r\n\t.controller('softwareUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Software';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear software\r\n\t\t\t$scope.software.paginated = {};\r\n\t\t\t$scope.software.results = null;\r\n\t\t\t$scope.software.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.software.paginated = data.data;\r\n\t\t\t\t$scope.software.paginated.show = true;\r\n\r\n\t\t\t\t$scope.software.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.software.busy || ($scope.software.page > $scope.software.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.software.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.software.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.software.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.software.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.software.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear software\r\n\t\t\t$scope.software.paginated = {};\r\n\t\t\t$scope.software.results = null;\r\n\t\t\t$scope.software.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.software.paginated = data.data;\r\n\t\t\t\t$scope.software.paginated.show = true;\r\n\r\n\t\t\t\t$scope.software.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.software.busy || ($scope.software.page > $scope.software.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.software.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.software.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.software.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.software.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.software.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear software\r\n\t\t\t$scope.software.paginated = {};\r\n\t\t\t$scope.software.results = null;\r\n\t\t\t$scope.software.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.software.paginated = data.data;\r\n\t\t\t\t$scope.software.paginated.show = true;\r\n\r\n\t\t\t\t$scope.software.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.software.busy || ($scope.software.page > $scope.software.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.software.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.software.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.software.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.software.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.software.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for software\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.software = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.software.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.software.paginated = data.data;\r\n\t\t\t\t$scope.software.paginated.show = true;\r\n\r\n\t\t\t\t$scope.software.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.software.busy || ($scope.software.page > $scope.software.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.software.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.software.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.software.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.software.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.software.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.software.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.software.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.software.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Scanner';\r\n\t\t\tquery.table_name = 'scanners';\r\n\t\t\tquery.property_code = 'PSWA';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.software.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('softwareUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Software', function($scope, $state, $stateParams, Software){\r\n\t\t$scope.asset = 'Software';\r\n\r\n\t\tSoftware.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('softwareUnitToolbarController', ['$scope', '$state', '$stateParams', 'Software', function($scope, $state, $stateParams, Software){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tSoftware.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.name;\r\n\t\t\t\t$scope.toolbar.childState = data.version;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addWorkStationDialogController', ['$scope', '$stateParams', '$mdDialog', 'Preloader', 'WorkStation', function($scope, $stateParams, $mdDialog, Preloader, WorkStation){\r\n\t\t$scope.workStation = {};\r\n\t\t$scope.floors = [\r\n\t\t\t{'pattern':6, 'value':'06'},\r\n\t\t\t{'pattern':10, 'value': '10'},\r\n\t\t];\r\n\t\t$scope.divisions = ['A','B'];\r\n\t\t$scope.types = [\r\n\t\t\t{'pattern':'Admin', 'value':'A'},\r\n\t\t\t{'pattern':'Production', 'value': 'P'},\r\n\t\t];\r\n\r\n\r\n\r\n\t\t$scope.patterns = [\r\n\t\t\t{\r\n\t\t\t\t'pattern' : 'A06-A-A***',\r\n\t\t\t\t'value' :  'A06-A-A',\r\n\t\t\t\t'meaning': 'Aeon 6th Floor - Division A - Admin Station Number',\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\t'pattern' : 'A06-A-P***',\r\n\t\t\t\t'value' :  'A06-A-P',\r\n\t\t\t\t'meaning': 'Aeon 6th Floor - Division A - Production Station Number',\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\t'pattern' : 'A10-A-P***',\r\n\t\t\t\t'value' :  'A10-A-P',\r\n\t\t\t\t'meaning': 'Aeon 10th Floor - Division A - Production Station Number',\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\t'pattern' : 'A06-B-A***',\r\n\t\t\t\t'value' :  'A06-B-A',\r\n\t\t\t\t'meaning': 'Aeon 6th Floor - Division B - Admin Station Number',\r\n\t\t\t},\r\n\r\n\r\n\t\t\t{\r\n\t\t\t\t'pattern' : 'A06-B-P***',\r\n\t\t\t\t'value' :  'A06-B-P',\r\n\t\t\t\t'meaning': 'Aeon 6th Floor - Division B - Production Station Number',\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tWorkStation.store($scope.workStation)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t})\r\n\t\t};\r\n\r\n\t}]);","adminModule\r\n\t.controller('floorPlanContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'WorkStation', 'WorkStationTag', function($scope, $state, $stateParams, $mdDialog, Preloader, WorkStation, WorkStationTag){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\tvar departmentID = $stateParams.departmentID;\r\n\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'floor-plan';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.workStation.paginated = {};\r\n\t\t\t$scope.workStation.page = 2;\r\n\t\t\t$scope.workStation.type = '';\r\n\t\t\t$scope.workStation.division = '';\r\n\t\t\tif(departmentID){\r\n\t\t\t\tWorkStation.paginateDepartment(departmentID)\r\n\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t$scope.subheader.count = data.total;\r\n\t\t\t\t\t\t$scope.workStation.paginated = data.data;\r\n\t\t\t\t\t\t$scope.workStation.paginated.show = true;\r\n\t\t\t\t\t\t// stop preload\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t}, function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tWorkStation.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.subheader.count = data.total;\r\n\t\t\t\t\t$scope.workStation.paginated = data.data;\r\n\t\t\t\t\t$scope.workStation.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Work Station';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t\tif(!departmentID){\r\n\t\t\t    $mdDialog.show({\r\n\t\t\t      \tcontroller: 'addWorkStationDialogController',\r\n\t\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-work-station-dialog.template.html',\r\n\t\t\t      \tparent: angular.element($('body')),\r\n\t\t\t    })\r\n\t\t\t    .then(function(){\r\n\t\t\t    \t/* Refreshes the list */\r\n\t\t\t    \t$scope.subheader.refresh();\r\n\t\t\t    });\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t$mdDialog.show({\r\n\t\t\t      \tcontroller: 'tagWorkStationDialogController',\r\n\t\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/tag-work-station-dialog.template.html',\r\n\t\t\t      \tparent: angular.element($('body')),\r\n\t\t\t    })\r\n\t\t\t    .then(function(){\r\n\t\t\t    \t/* Refreshes the list */\r\n\t\t\t    \t$scope.subheader.refresh();\r\n\t\t\t    });\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for Desktop\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.workStation = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.workStation.page = 2;\r\n\t\t//\r\n\r\n\t\tif(departmentID){\r\n\t\t\tWorkStation.paginateDepartment(departmentID)\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.subheader.count = data.data.total;\r\n\t\t\t\t\t$scope.workStation.paginated = data.data;\r\n\t\t\t\t\t$scope.workStation.paginated.show = true;\r\n\r\n\t\t\t\t\t$scope.workStation.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.workStation.busy || ($scope.workStation.page > $scope.workStation.paginated.last_page)){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.workStation.busy = true;\r\n\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tWorkStation.paginateDepartment(departmentID, $scope.workStation.page)\r\n\t\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.workStation.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\t$scope.workStation.paginated.data.push(item);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.workStation.busy = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse{\r\n\t\t\tWorkStation.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.subheader.count = data.data.total;\r\n\t\t\t\t\t$scope.workStation.paginated = data.data;\r\n\t\t\t\t\t$scope.workStation.paginated.show = true;\r\n\r\n\t\t\t\t\t$scope.workStation.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.workStation.busy || ($scope.workStation.page > $scope.workStation.paginated.last_page)){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.workStation.busy = true;\r\n\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tWorkStation.paginate($scope.workStation.page)\r\n\t\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.workStation.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\t$scope.workStation.paginated.data.push(item);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.workStation.busy = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.workStation.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.workStation.paginated.show = false;\r\n\t\t\tPreloader.preload()\r\n\t\t\tif(departmentID){\t\t\t\r\n\t\t\t\tWorkStation.searchDepartment(departmentID, $scope.workStation)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.workStation.results = data;\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(data){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tWorkStation.search($scope.workStation)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.workStation.results = data;\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(data){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// onclick of \r\n\t\t$scope.show = function(workStationID){\r\n\t\t\tif($stateParams.departmentID){\r\n\t\t\t\t$state.go('main.work-station', {'departmentID':$stateParams.departmentID, 'workStationID': workStationID});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tPreloader.preload();\r\n\t\t\t\tWorkStationTag.workstation(workStationID)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\tif(data.department_id){\r\n\t\t\t\t\t\t\t$state.go('main.work-station', {'departmentID':data.department_id, 'workStationID': workStationID});\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t$mdDialog.show(\r\n\t\t\t\t\t\t      \t$mdDialog.alert()\r\n\t\t\t\t\t\t\t        .parent(angular.element($('body')))\r\n\t\t\t\t\t\t\t        .clickOutsideToClose(true)\r\n\t\t\t\t\t\t\t        .title('Vacant Work Station')\r\n\t\t\t\t\t\t\t        .content('This work station is vacant and not under any department.')\r\n\t\t\t\t\t\t\t        .ariaLabel('Vacant Work Station')\r\n\t\t\t\t\t\t\t        .ok('Got it!')\r\n\t\t\t\t\t\t    );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t}]);\r\n","adminModule\r\n\t.controller('floorPlanContentController', ['$scope', '$state', '$stateParams', function($scope, $state, $stateParams){\r\n\t\t\r\n\t}]);","adminModule\r\n\t.controller('floorPlanRightSidenavController', ['$scope', '$state', '$stateParams', 'departmentService', 'Department',  function($scope, $state, $stateParams, departmentService, Department){\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\r\n\t\tvar departments = departmentService.get();\r\n\t\tif(!departments.length){\r\n\t\t\tDepartment.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tdepartments = data;\r\n\t\t\t\t\t$scope.rightSidenav.departments = data;\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreload.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$scope.rightSidenav.departments = departments;\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('floorPlanToolbarController', ['$scope', '$stateParams', 'departmentService', 'Department', function($scope, $stateParams, departmentService, Department){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t/**\r\n\t\t * Properties and method of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Floor Plan';\r\n\r\n\t\tvar index = $stateParams.departmentID - 1;\r\n\t\t$scope.toolbar.parentState = 'Floor Plan';\r\n\r\n\t\tvar departments = departmentService.get();\r\n\t\tif(!departments.length){\r\n\t\t\tDepartment.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tdepartments = data;\r\n\t\t\t\t\t$scope.toolbar.childState = index > -1 ? departments[index].name : null;\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreload.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$scope.toolbar.childState =  index > -1 ? departments[index].name : null;\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('tagWorkStationDialogController', ['$scope', '$stateParams', '$mdDialog', 'Preloader', 'WorkStation', 'WorkStationTag', 'Department', function($scope, $stateParams, $mdDialog, Preloader, WorkStation, WorkStationTag, Department){\r\n\t\tvar departmentID = $stateParams.departmentID;\r\n\t\t$scope.workStationTag = {};\r\n\t\t$scope.workStationTag.department_id = $stateParams.departmentID;\r\n\r\n\t\t$scope.divisions = [\r\n\t\t\t{'name':'Block A', 'value':'A'},\r\n\t\t\t{'name':'Block B', 'value':'B'},\r\n\t\t];\r\n\r\n\t\t$scope.types = [\r\n\t\t\t{'name':'Admin', 'value':'admin'},\r\n\t\t\t{'name':'Production', 'value':'production'},\r\n\t\t];\t\t\r\n\r\n\t\t$scope.searchWorkStations = function(){\r\n\r\n\t\t\tWorkStation.vacant($scope.workStationTag)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.workStations = data;\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tDepartment.show(departmentID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.department = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tWorkStationTag.store($scope.workStationTag)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t})\r\n\t\t};\r\n\r\n\t}]);","adminModule\r\n\t.controller('addVideoCardDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'VideoCard', function($scope, $state, $mdDialog, Preloader, VideoCard){\r\n\t\t$scope.videoCard = {};\r\n\r\n\t\t$scope.videoCard.sizes = [\r\n\t\t\t{'size':'1GB'},\r\n\t\t\t{'size':'2GB'},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tVideoCard.store($scope.videoCard)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('videoCardContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'VideoCard', function($scope, $state, $stateParams, $mdDialog, Preloader, VideoCard){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.videoCard.paginated = {};\r\n\t\t\t$scope.videoCard.page = 2;\r\n\t\t\tVideoCard.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.videoCard.paginated = data.data;\r\n\t\t\t\t\t$scope.videoCard.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Video Card';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addVideoCardDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-video-card-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for videoCard\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.videoCard = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.videoCard.page = 2;\r\n\r\n\t\tVideoCard.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.videoCard.paginated = data.data;\r\n\t\t\t\t$scope.videoCard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.videoCard.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.videoCard.busy || ($scope.videoCard.page > $scope.videoCard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.videoCard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tVideoCard.paginate($scope.videoCard.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.videoCard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.videoCard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.videoCard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.videoCard.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.videoCard.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tVideoCard.search($scope.videoCard)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.videoCard.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('videoCardContentController', ['$scope', function($scope){\r\n\t\t//\r\n\t}])","adminModule\r\n\t.controller('videoCardRightSidenavController', ['$scope', function($scope){\r\n\t\t//\r\n\t}])","adminModule\r\n\t.controller('videoCardToolbarController', ['$scope', '$stateParams', 'VideoCard', function($scope, $stateParams, VideoCard){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Video Card';\r\n\t}]);","adminModule\r\n\t.controller('videoCardUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Video Card';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear videoCard\r\n\t\t\t$scope.videoCard.paginated = {};\r\n\t\t\t$scope.videoCard.results = null;\r\n\t\t\t$scope.videoCard.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.videoCard.paginated = data.data;\r\n\t\t\t\t$scope.videoCard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.videoCard.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.videoCard.busy || ($scope.videoCard.page > $scope.videoCard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.videoCard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.videoCard.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.videoCard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.videoCard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.videoCard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear videoCard\r\n\t\t\t$scope.videoCard.paginated = {};\r\n\t\t\t$scope.videoCard.results = null;\r\n\t\t\t$scope.videoCard.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.videoCard.paginated = data.data;\r\n\t\t\t\t$scope.videoCard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.videoCard.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.videoCard.busy || ($scope.videoCard.page > $scope.videoCard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.videoCard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.videoCard.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.videoCard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.videoCard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.videoCard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear videoCard\r\n\t\t\t$scope.videoCard.paginated = {};\r\n\t\t\t$scope.videoCard.results = null;\r\n\t\t\t$scope.videoCard.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.videoCard.paginated = data.data;\r\n\t\t\t\t$scope.videoCard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.videoCard.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.videoCard.busy || ($scope.videoCard.page > $scope.videoCard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.videoCard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.videoCard.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.videoCard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.videoCard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.videoCard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for videoCard\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.videoCard = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.videoCard.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.videoCard.paginated = data.data;\r\n\t\t\t\t$scope.videoCard.paginated.show = true;\r\n\r\n\t\t\t\t$scope.videoCard.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.videoCard.busy || ($scope.videoCard.page > $scope.videoCard.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.videoCard.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.videoCard.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.videoCard.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.videoCard.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.videoCard.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.videoCard.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.videoCard.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.videoCard.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Video Card';\r\n\t\t\tquery.table_name = 'video_cards';\r\n\t\t\tquery.property_code = 'PVDC';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.videoCard.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('videoCardUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'VideoCard', function($scope, $state, $stateParams, VideoCard){\r\n\t\t$scope.asset = 'VideoCard';\r\n\r\n\t\tVideoCard.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('videoCardUnitToolbarController', ['$scope', '$state', '$stateParams', 'VideoCard', function($scope, $state, $stateParams, VideoCard){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tVideoCard.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.model;\r\n\t\t\t\t$scope.toolbar.childState = data.size;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addUpsDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'UPS', function($scope, $state, $mdDialog, Preloader, UPS){\r\n\t\t$scope.ups = {};\r\n\r\n\t\t$scope.ups.wattages = [\r\n\t\t\t{'wattage':'550W'},\r\n\t\t\t{'wattage':'650W'},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tUPS.store($scope.ups)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('upsContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'UPS', function($scope, $state, $stateParams, $mdDialog, Preloader, UPS){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.ups.paginated = {};\r\n\t\t\t$scope.ups.page = 2;\r\n\t\t\tUPS.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.ups.paginated = data.data;\r\n\t\t\t\t\t$scope.ups.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add UPS';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addUpsDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-ups-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for ups\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.ups = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.ups.page = 2;\r\n\r\n\t\tUPS.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.ups.paginated = data.data;\r\n\t\t\t\t$scope.ups.paginated.show = true;\r\n\r\n\t\t\t\t$scope.ups.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.ups.busy || ($scope.ups.page > $scope.ups.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.ups.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tUPS.paginate($scope.ups.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.ups.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.ups.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.ups.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.ups.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.ups.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tUPS.search($scope.ups)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.ups.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('upsContentController', ['$scope', function($scope){\r\n\t\t//\r\n\t}])","adminModule\r\n\t.controller('upsRightSidenavController', ['$scope', function($scope){\r\n\t\t//\r\n\t}])","adminModule\r\n\t.controller('upsToolbarController', ['$scope', '$stateParams', 'UPS', function($scope, $stateParams, UPS){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'UPS';\r\n\t}]);","adminModule\r\n\t.controller('upsUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Uninterruptible Power Supply';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear ups\r\n\t\t\t$scope.ups.paginated = {};\r\n\t\t\t$scope.ups.results = null;\r\n\t\t\t$scope.ups.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.ups.paginated = data.data;\r\n\t\t\t\t$scope.ups.paginated.show = true;\r\n\r\n\t\t\t\t$scope.ups.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.ups.busy || ($scope.ups.page > $scope.ups.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.ups.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.ups.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.ups.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.ups.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.ups.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear ups\r\n\t\t\t$scope.ups.paginated = {};\r\n\t\t\t$scope.ups.results = null;\r\n\t\t\t$scope.ups.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.ups.paginated = data.data;\r\n\t\t\t\t$scope.ups.paginated.show = true;\r\n\r\n\t\t\t\t$scope.ups.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.ups.busy || ($scope.ups.page > $scope.ups.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.ups.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.ups.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.ups.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.ups.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.ups.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear ups\r\n\t\t\t$scope.ups.paginated = {};\r\n\t\t\t$scope.ups.results = null;\r\n\t\t\t$scope.ups.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.ups.paginated = data.data;\r\n\t\t\t\t$scope.ups.paginated.show = true;\r\n\r\n\t\t\t\t$scope.ups.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.ups.busy || ($scope.ups.page > $scope.ups.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.ups.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.ups.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.ups.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.ups.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.ups.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for ups\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.ups = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.ups.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.ups.paginated = data.data;\r\n\t\t\t\t$scope.ups.paginated.show = true;\r\n\r\n\t\t\t\t$scope.ups.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.ups.busy || ($scope.ups.page > $scope.ups.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.ups.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.ups.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.ups.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.ups.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.ups.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.ups.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.ups.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.ups.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Uninterruptible Power Supply';\r\n\t\t\tquery.table_name = 'uninterruptible_power_supplies';\r\n\t\t\tquery.property_code = 'PUPS';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.ups.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('upsUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'UPS', function($scope, $state, $stateParams, UPS){\r\n\t\t$scope.asset = 'UPS';\r\n\r\n\t\tUPS.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('upsUnitToolbarController', ['$scope', '$state', '$stateParams', 'UPS', function($scope, $state, $stateParams, UPS){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tUPS.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.model;\r\n\t\t\t\t$scope.toolbar.childState = data.wattage;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('addTelephoneDialogController', ['$scope', '$state', '$mdDialog', 'Preloader', 'Telephone', function($scope, $state, $mdDialog, Preloader, Telephone){\r\n\t\t$scope.telephone = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\t\t\t/**\r\n\t\t\t * Stores Single Record\r\n\t\t\t*/\r\n\t\t\tTelephone.store($scope.telephone)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Stops Preloader \r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}]);","adminModule\r\n\t.controller('telephoneContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'Telephone', function($scope, $state, $stateParams, $mdDialog, Preloader, Telephone){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'assets';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear desktop\r\n\t\t\t$scope.telephone.paginated = {};\r\n\t\t\t$scope.telephone.page = 2;\r\n\t\t\tTelephone.paginate()\r\n\t\t\t\t.then(function(data){\r\n\t\t\t\t\t$scope.telephone.paginated = data.data;\r\n\t\t\t\t\t$scope.telephone.paginated.show = true;\r\n\t\t\t\t\t// stop preload\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Telephone';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addTelephoneDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-telephone-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t/* Refreshes the list */\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\t/**\r\n\t\t * Object for telephone\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.telephone = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.telephone.page = 2;\r\n\r\n\t\tTelephone.paginate()\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.telephone.paginated = data.data;\r\n\t\t\t\t$scope.telephone.paginated.show = true;\r\n\r\n\t\t\t\t$scope.telephone.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.telephone.busy || ($scope.telephone.page > $scope.telephone.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.telephone.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tTelephone.paginate($scope.telephone.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.telephone.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.telephone.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.telephone.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.telephone.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.telephone.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tTelephone.search($scope.telephone)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.telephone.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID':id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('telephoneToolbarController', ['$scope', 'Telephone', function($scope, Telephone){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Assets';\r\n\t\t$scope.toolbar.childState = 'Telephone';\r\n\t}]);","adminModule\r\n\t.controller('telephoneUnitContentContainerController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Preloader, AssetTag){\r\n\t\tvar unitID = $stateParams.unitID;\r\n\t\tvar query = {};\r\n\r\n\t\tquery.component_id = unitID;\r\n\t\tquery.component_type = 'Telephone';\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'units';\r\n\r\n\t\t/* Refreshes the list */\r\n\t\t$scope.subheader.activeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear telephone\r\n\t\t\t$scope.telephone.paginated = {};\r\n\t\t\t$scope.telephone.results = null;\r\n\t\t\t$scope.telephone.page = 2;\r\n\t\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.telephone.paginated = data.data;\r\n\t\t\t\t$scope.telephone.paginated.show = true;\r\n\r\n\t\t\t\t$scope.telephone.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.telephone.busy || ($scope.telephone.page > $scope.telephone.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.telephone.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.telephone.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.telephone.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.telephone.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.telephone.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.repairUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear telephone\r\n\t\t\t$scope.telephone.paginated = {};\r\n\t\t\t$scope.telephone.results = null;\r\n\t\t\t$scope.telephone.page = 2;\r\n\t\t\tAssetTag.repairUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Under Repair'\r\n\t\t\t\t$scope.telephone.paginated = data.data;\r\n\t\t\t\t$scope.telephone.paginated.show = true;\r\n\r\n\t\t\t\t$scope.telephone.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.telephone.busy || ($scope.telephone.page > $scope.telephone.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.telephone.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.repairUnit($scope.telephone.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.telephone.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.telephone.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.telephone.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/* Refreshes the list and change it to repair */\r\n\t\t$scope.subheader.disposeUnit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\t// clear telephone\r\n\t\t\t$scope.telephone.paginated = {};\r\n\t\t\t$scope.telephone.results = null;\r\n\t\t\t$scope.telephone.page = 2;\r\n\t\t\tAssetTag.disposeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Disposed'\r\n\t\t\t\t$scope.telephone.paginated = data.data;\r\n\t\t\t\t$scope.telephone.paginated.show = true;\r\n\r\n\t\t\t\t$scope.telephone.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.telephone.busy || ($scope.telephone.page > $scope.telephone.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.telephone.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.disposeUnit($scope.telephone.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.telephone.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.telephone.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.telephone.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPreloader.stop();\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for telephone\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.telephone = {};\r\n\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t$scope.telephone.page = 2;\r\n\t\t// \r\n\t\t\r\n\t\tAssetTag.activeUnit(1, query)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.listType = 'Active'\r\n\t\t\t\t$scope.telephone.paginated = data.data;\r\n\t\t\t\t$scope.telephone.paginated.show = true;\r\n\r\n\t\t\t\t$scope.telephone.paginateLoad = function(){\r\n\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.telephone.busy || ($scope.telephone.page > $scope.telephone.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.telephone.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tAssetTag.activeUnit($scope.telephone.page, query)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.telephone.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.telephone.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.telephone.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.telephone.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.telephone.paginated.show = false;\r\n\t\t\tPreloader.preload();\r\n\t\t\tvar query = {};\r\n\t\t\tquery.userInput = $scope.telephone.userInput;\r\n\t\t\tquery.component_id = unitID;\r\n\t\t\tquery.component_type = 'Telephone';\r\n\t\t\tquery.table_name = 'telephones';\r\n\t\t\tquery.property_code = 'PTEL';\r\n\t\t\tAssetTag.search(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.telephone.results = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(data){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.repaired = function(id){\r\n\t\t\tAssetTag.active(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.dispose = function(id){\r\n\t\t\tAssetTag.dispose(id)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$scope.subheader.repairUnit();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.show = function(departmentID, workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID':workStationID})\r\n\t\t}\r\n\t}]);\r\n","adminModule\r\n\t.controller('telephoneUnitRightSidenavController', ['$scope', '$state', '$stateParams', 'Telephone', function($scope, $state, $stateParams, Telephone){\r\n\t\t$scope.asset = 'Telephone';\r\n\r\n\t\tTelephone.other($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.others = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.show = function(id){\r\n\t\t\t$state.go('main.units', {'assetID': $stateParams.assetID, 'unitID': id});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('telephoneUnitToolbarController', ['$scope', '$state', '$stateParams', 'Telephone', function($scope, $state, $stateParams, Telephone){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.assets', {'assetID': $stateParams.assetID});\r\n\t\t};\r\n\r\n\t\tTelephone.show($stateParams.unitID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.parentState = data.brand;\r\n\t\t\t\t$scope.toolbar.childState = data.model;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t}]);","adminModule\r\n\t.controller('analysisContentController', ['$scope', function($scope){\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.content = {};\r\n\r\n\t\t$scope.content.title = 'Analysis Content Initialized';\r\n\t}]);","adminModule\r\n\t.controller('analysisRightSidenavController', ['$scope', function($scope){\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.sidenav = {};\r\n\r\n\t\t$scope.sidenav.title = 'Analysis Right Sidenav Initialized';\r\n\t}]);","adminModule\r\n\t.controller('analysisToolbarController', ['$scope', function($scope){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t/**\r\n\t\t * Properties and method of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar.parentState = 'Dashboard';\r\n\t\t$scope.toolbar.childState = 'Analysis';\r\n\r\n\t\t/**\r\n\t\t * Search database and look for user input depending on state.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\treturn;\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('addAssetDialogController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'WorkStation', 'AssetTag', 'AssetTagService', 'Desktop', 'HardDisk', 'Headset', 'Keyboard', 'Memory', 'Monitor', 'Mouse', 'Software', 'UPS', 'VideoCard', 'OtherComponent', function($scope, $state, $stateParams, $mdDialog, Preloader, WorkStation, AssetTag, AssetTagService, Desktop, HardDisk, Headset, Keyboard, Memory, Monitor, Mouse, Software, UPS, VideoCard, OtherComponent){\r\n\t\tvar workStationID = $stateParams.workStationID;\r\n\t\t$scope.workStation = AssetTagService.getStation();\r\n\t\t\t\r\n\t\t$scope.components = [\r\n\t\t\t{'name': 'CPU', 'value': 'Desktop'},\r\n\t\t\t{'name': 'Firewall', 'value':'Firewall'},\r\n\t\t\t{'name': 'Hard Disk', 'value':'Hard Disk'},\r\n\t\t\t{'name': 'Headset', 'value':'Headset'},\r\n\t\t\t{'name': 'Keyboard', 'value':'Keyboard'},\r\n\t\t\t{'name': 'Mac', 'value':'Mac'},\r\n\t\t\t{'name': 'Memory', 'value':'Memory'},\r\n\t\t\t{'name': 'Monitor', 'value':'Monitor'},\r\n\t\t\t{'name': 'Mouse', 'value':'Mouse'},\r\n\t\t\t{'name': 'Network Switch', 'value':'Network Switch'},\r\n\t\t\t{'name': 'Portable Hard Disk', 'value':'Portable Hard Disk'},\r\n\t\t\t{'name': 'Printer', 'value':'Printer'},\r\n\t\t\t{'name': 'Projector', 'value':'Projector'},\r\n\t\t\t{'name': 'Router', 'value':'Router'},\r\n\t\t\t{'name': 'Scanner', 'value':'Scanner'},\r\n\t\t\t{'name': 'Software', 'value':'Software'},\r\n\t\t\t{'name': 'Speaker', 'value':'Speaker'},\r\n\t\t\t{'name': 'Telephone', 'value':'Telephone'},\r\n\t\t\t{'name': 'UPS', 'value':'Uninterruptible Power Supply'},\r\n\t\t\t{'name': 'Video Card', 'value':'Video Card'},\r\n\t\t\t{'name': 'Other Component', 'value':'Other Component'},\r\n\t\t];\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tAssetTagService.setType($scope.category);\r\n\t\t\t$mdDialog.hide();\r\n\t\t};\r\n\r\n\t\t\r\n\t}]);","adminModule\r\n\t.controller('addAssetTagDialogController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'WorkStation', 'AssetTag', 'AssetTagService', 'Desktop', 'Firewall', 'HardDisk', 'Headset', 'Keyboard', 'Mac', 'Memory', 'Monitor', 'Mouse', 'NetworkSwitch', 'PortableHardDisk', 'Printer', 'Projector', 'Router', 'Scanner', 'Software', 'Speaker', 'Telephone', 'UPS', 'VideoCard', 'OtherComponent', function($scope, $state, $stateParams, $mdDialog, Preloader, WorkStation, AssetTag, AssetTagService, Desktop, Firewall, HardDisk, Headset, Keyboard, Mac, Memory, Monitor, Mouse, NetworkSwitch, PortableHardDisk, Printer, Projector, Router, Scanner, Software, Speaker, Telephone, UPS, VideoCard, OtherComponent){\r\n\t\tvar workStationID = $stateParams.workStationID;\r\n\t\tvar brand = {'search':'brand'};\r\n\t\tvar maker = {'search':'maker'};\r\n\t\tvar type = {'search':'type'};\r\n\t\t$scope.asset_type = AssetTagService.getType();\r\n\t\t$scope.workStation = AssetTagService.getStation();\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.assets = [\r\n\t\t\t{ \r\n\t\t\t\t'component_type' : $scope.asset_type,\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\tif ($scope.asset_type == 'Desktop') {\r\n\t\t\tDesktop.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\t\t\t\t\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tDesktop.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if ($scope.asset_type == 'Firewall') {\r\n\t\t\tFirewall.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\t\t\t\t\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tFirewall.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if ($scope.asset_type == 'Hard Disk') {\r\n\t\t\tHardDisk.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].capacity = null;\r\n\t\t\t\t$scope.assets[idx].models = null;\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tvar query = {'search':'capacity', 'brand': $scope.assets[idx].brand };\r\n\t\t\t\tHardDisk.distinct(query)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].capacities = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Headset') {\r\n\t\t\tHeadset.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tHeadset.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Keyboard') {\r\n\t\t\tKeyboard.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tKeyboard.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Mac') {\r\n\t\t\tMac.distinct(type)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].types = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.mactypeChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tMac.processor($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].processors = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Memory') {\r\n\t\t\tMemory.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].memory_type = null;\r\n\t\t\t\t$scope.assets[idx].speeds = null;\r\n\t\t\t\t$scope.assets[idx].speed = null;\r\n\t\t\t\t$scope.assets[idx].sizes = null;\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tvar query = {'search':'type', 'brand': $scope.assets[idx].brand };\r\n\t\t\t\tMemory.distinct(query)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].types = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Monitor') {\r\n\t\t\tMonitor.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tMonitor.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Mouse') {\r\n\t\t\tMouse.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tMouse.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Network Switch') {\r\n\t\t\tNetworkSwitch.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tNetworkSwitch.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if ($scope.asset_type == 'Portable Hard Disk') {\r\n\t\t\tPortableHardDisk.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].capacity = null;\r\n\t\t\t\t$scope.assets[idx].models = null;\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tvar query = {'search':'capacity', 'brand': $scope.assets[idx].brand };\r\n\t\t\t\tPortableHardDisk.distinct(query)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].capacities = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if ($scope.asset_type == 'Printer') {\r\n\t\t\tPrinter.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tPrinter.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if ($scope.asset_type == 'Projector') {\r\n\t\t\tProjector.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tProjector.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Router') {\r\n\t\t\tRouter.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tRouter.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Scanner') {\r\n\t\t\tScanner.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tScanner.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Software') {\r\n\t\t\tSoftware.distinct(maker)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].makers = data;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Speaker') {\r\n\t\t\tSpeaker.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tSpeaker.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Telephone') {\r\n\t\t\tTelephone.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\tTelephone.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Uninterruptible Power Supply') {\r\n\t\t\tUPS.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].model = null;\r\n\t\t\t\tUPS.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Video Card') {\r\n\t\t\tVideoCard.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t\t$scope.assets[idx].models = null;\r\n\t\t\t\t$scope.assets[idx].size = null;\r\n\t\t\t\tvar query = {'search':'size', 'brand': $scope.assets[idx].brand }\r\n\t\t\t\tVideoCard.distinct(query)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].sizes = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($scope.asset_type == 'Other Component'){\r\n\t\t\tOtherComponent.distinct(brand)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[0].brands = data;\r\n\t\t\t\t});\r\n\r\n\t\t\t$scope.brandChange = function(idx){\r\n\t\t\t\t$scope.assets[idx].model = null;\r\n\t\t\t\tOtherComponent.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$scope.capacityChange = function(idx, type){\r\n\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\tif(type == 'Hard Disk'){\t\t\t\r\n\t\t\t\tHardDisk.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tPortableHardDisk.model($scope.assets[idx])\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.typeChange = function(idx){\r\n\t\t\t$scope.assets[idx].speed = null;\r\n\t\t\t$scope.assets[idx].sizes = null;\r\n\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\tvar query = {'search':'speed', 'brand': $scope.assets[idx].brand, 'type': $scope.assets[idx].memory_type };\r\n\t\t\tMemory.distinct(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[idx].speeds = data;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.speedChange = function(idx){\r\n\t\t\tvar query = {'search':'size', 'brand': $scope.assets[idx].brand, 'type': $scope.assets[idx].memory_type , 'speed': $scope.assets[idx].speed };\r\n\t\t\tMemory.distinct(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[idx].sizes = data;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.sizeChange = function(idx){\r\n\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\tvar query = {'search':'model', 'brand': $scope.assets[idx].brand, 'size': $scope.assets[idx].size }\r\n\t\t\tVideoCard.distinct(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[idx].models = data;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.makerChange = function(idx){\r\n\t\t\t$scope.assets[idx].name = null;\r\n\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t$scope.assets[idx].versions = null;\r\n\t\t\tvar query = {'search':'name', 'maker': $scope.assets[idx].maker };\r\n\t\t\tSoftware.distinct(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[idx].names = data;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.nameChange = function(idx){\r\n\t\t\t$scope.assets[idx].component_id = null;\r\n\t\t\t$scope.assets[idx].versions = null;\r\n\t\t\tvar query = {'search':'version', 'maker': $scope.assets[idx].maker, 'name': $scope.assets[idx].name };\r\n\t\t\tSoftware.distinct(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets[idx].versions = data;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.addMoreComponent = function(type){\r\n\t\t\t$scope.assets.push({'component_type' : type});\r\n\t\t\tvar index = $scope.assets.length - 1;\r\n\r\n\t\t\tif(type == 'Memory'){\t\t\t\r\n\t\t\t\tMemory.distinct(brand)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[index].brands = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if(type == 'Monitor'){\r\n\t\t\t\tMonitor.distinct(brand)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[index].brands = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if(type == 'Software'){\r\n\t\t\t\tSoftware.distinct(maker)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.assets[index].makers = data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$scope.removeComponent = function(index){\r\n\t\t\t$scope.assets.splice(index, 1);\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t/* Starts Preloader */\r\n\t\t\tPreloader.preload();\r\n\r\n\t\t\tangular.forEach($scope.assets, function(item, key){\r\n\t\t\t\titem.work_station_id = workStationID;\r\n\t\t\t\tmoment(item.date_purchase).format('L');\r\n\t\t\t});\r\n\r\n\t\t\t// console.log($scope.assets);\r\n\r\n\t\t\tAssetTag.storeMultiple($scope.assets)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('editAssetDialogController', ['$scope', '$mdDialog', 'Preloader', 'AssetTagService', 'AssetTag', function($scope, $mdDialog, Preloader, AssetTagService, AssetTag){\r\n\t\tvar assetTagID = AssetTagService.getID();\r\n\t\t$scope.workStation = AssetTagService.getStation();\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\tAssetTag.specific(assetTagID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.asset = data;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t})\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t// start preloader\r\n\t\t\tPreloader.preload();\r\n\t\t\tAssetTag.update(assetTagID, $scope.asset)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t$mdDialog.hide();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('transferWorkStationDialogController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Preloader', 'WorkStation', 'AssetTag', 'AssetTagService', 'Department', 'WorkStationTag', function($scope, $state, $stateParams, $mdDialog, Preloader, WorkStation, AssetTag, AssetTagService, Department, WorkStationTag){\r\n\t\tvar workStationID = $stateParams.workStationID;\r\n\t\tvar departmentID = $stateParams.departmentID;\r\n\t\t$scope.workStation = AssetTagService.getStation();\r\n\r\n\t\t$scope.workStationTag = {};\r\n\t\t$scope.workStationTag.work_station_id = workStationID;\r\n\r\n\t\tDepartment.others()\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.workStationTag.departments = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tPreloader.preload()\r\n\t\t\tWorkStationTag.update(departmentID, $scope.workStationTag)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$state.go('main.work-station', {'departmentID':$scope.workStationTag.department_id, 'workStationID': workStationID})\r\n\t\t\t\t\t$mdDialog.hide();\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('pullOutAssetDialogController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Department', 'WorkStation', 'Preloader', 'AssetTagService', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Department, WorkStation, Preloader, AssetTagService, AssetTag){\r\n\t\tvar assetTagID = AssetTagService.getID();\r\n\t\t$scope.workStation = AssetTagService.getStation();\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\tAssetTag.specific(assetTagID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.asset = data;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t$scope.repair = function(){\r\n\t\t\tif($scope.asset.component_type == 'Desktop'){\r\n\t\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t        .title('Would you like to include components under this unit?')\r\n\t\t\t        .content('Hard disk(s), RAM(s), video card, and softwares will be pulled out along with the unit.')\r\n\t\t\t        .ok('Continue')\r\n\t\t\t        .cancel('Keep it');\r\n\t\t\t    $mdDialog.show(confirm)\r\n\t\t\t    \t.then(function() {\r\n\t\t\t\t      \tPreloader.preload();\r\n\t\t\t\t\t\tAssetTag.repair(assetTagID)\r\n\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\tAssetTag.repairComponents($stateParams.workStationID)\r\n\t\t\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t    }, function() {\r\n\t\t\t\t    \tPreloader.preload();\r\n\t\t\t\t\t    AssetTag.repair(assetTagID)\r\n\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t    });\r\n\t\t\t}\r\n\t\t\telse{\t\t\t\r\n\t\t\t\tPreloader.preload();\r\n\t\t\t\tAssetTag.repair(assetTagID)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.dispose = function(){\r\n\t\t\tif($scope.asset.component_type == 'Desktop'){\r\n\t\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t        .title('Would you like to include components under this unit?')\r\n\t\t\t        .content('Hard disk(s), RAM(s), video card, and softwares will be pulled out along with the unit.')\r\n\t\t\t        .ok('Continue')\r\n\t\t\t        .cancel('Keep it');\r\n\t\t\t    $mdDialog.show(confirm)\r\n\t\t\t    \t.then(function() {\r\n\t\t\t\t      \tPreloader.preload();\r\n\t\t\t\t\t\tAssetTag.dispose(assetTagID)\r\n\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\tAssetTag.disposeComponents($stateParams.workStationID)\r\n\t\t\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t    }, function() {\r\n\t\t\t\t      \tAssetTag.dispose(assetTagID)\r\n\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t    });\r\n\t\t\t}\r\n\t\t\telse{\t\t\t\r\n\t\t\t\tPreloader.preload();\r\n\t\t\t\tAssetTag.dispose(assetTagID)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t}]);","adminModule\r\n\t.controller('swapAssetDialogController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Department', 'WorkStation', 'Preloader', 'AssetTagService', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Department, WorkStation, Preloader, AssetTagService, AssetTag){\r\n\t\tvar assetTagID = AssetTagService.getID();\r\n\t\t$scope.workStation = AssetTagService.getStation();\r\n\t\t$scope.asset = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\tAssetTag.specific(assetTagID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.assetTag = data;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\tDepartment.index()\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.departments = data\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\r\n\t\t$scope.showFloors = function(){\r\n\t\t\t$scope.workstations = [];\r\n\t\t\t$scope.assetTag.work_station_id = null;\r\n\t\t\t$scope.assetTag.asset_tag_id = null;\r\n\t\t\t$scope.assetTag.floor = null;\r\n\t\t\t$scope.assetTag.division = null;\r\n\t\t\tWorkStation.floors($scope.assetTag.department)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.floors = data;\r\n\t\t\t\t})\r\n\t\t};\r\n\r\n\t\t$scope.showDivisions = function(){\r\n\t\t\t$scope.assetTag.work_station_id = null;\r\n\t\t\t$scope.assetTag.asset_tag_id = null;\r\n\t\t\t$scope.assetTag.division = null;\r\n\t\t\t$scope.workstations = [];\r\n\t\t\tWorkStation.divisions($scope.assetTag.department, $scope.assetTag.floor)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.divisions = data;\r\n\t\t\t\t})\r\n\t\t};\r\n\r\n\t\t$scope.showWorkStations = function(){\r\n\t\t\t$scope.assetTag.work_station_id = null;\r\n\t\t\t$scope.assetTag.asset_tag_id = null;\r\n\t\t\t$scope.workstations = [];\r\n\t\t\tWorkStation.availableTransfer($scope.assetTag, $stateParams.workStationID)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.workstations = data;\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.showAssets = function(){\r\n\t\t\t$scope.assetTag.asset_tag_id = null;\r\n\t\t\t$scope.assetTag_tags = [];\r\n\t\t\tAssetTag.availableSwap($scope.assetTag)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.asset_tags = data;\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.assetTag.component_type=='Desktop'){\r\n\t\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t        .title('Would you like to include components under this unit?')\r\n\t\t\t        .content('Hard disk(s), RAM(s), video card, and softwares will be swapped along with the unit.')\r\n\t\t\t        .ok('Continue')\r\n\t\t\t        .cancel('Keep it');\r\n\t\t\t    $mdDialog.show(confirm)\r\n\t\t\t    \t.then(function() {\r\n\t\t\t\t      \tPreloader.preload();\r\n\t\t\t\t\t\tAssetTag.swap(assetTagID, $scope.asset)\r\n\t\t\t\t\t\t\t.success(function(swapWorkStationID){\r\n\t\t\t\t\t\t\t\tAssetTag.swapComponents($stateParams.workStationID, swapWorkStationID)\r\n\t\t\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t    }, function() {\r\n\t\t\t\t    \tPreloader.preload();\r\n\t\t\t\t\t    AssetTag.swap(assetTagID, $scope.asset)\r\n\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t    });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tPreloader.preload();\r\n\t\t\t\tAssetTag.swap(assetTagID, $scope.asset)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t$mdDialog.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('tagUsersWorkStationDialogController', ['$scope', '$stateParams', '$mdDialog', 'Preloader', 'Employee', 'EmployeeTag', 'AssetTagService', function($scope, $stateParams, $mdDialog, Preloader, Employee, EmployeeTag, AssetTagService){\r\n\t\t$scope.workStation = AssetTagService.getStation();\r\n\t\t$scope.employee_tag = {};\r\n\t\t$scope.employee_tag.work_station_id = $stateParams.workStationID;\r\n\r\n\t\tEmployee.department($stateParams.departmentID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.employees = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tPreloader.preload();\r\n\t\t\tEmployeeTag.store($scope.employee_tag)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t//\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t})\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('transferAssetDialogController', ['$scope', '$state', '$stateParams', '$mdDialog', 'Department', 'WorkStation', 'Preloader', 'AssetTagService', 'AssetTag', function($scope, $state, $stateParams, $mdDialog, Department, WorkStation, Preloader, AssetTagService, AssetTag){\r\n\t\tvar assetTagID = AssetTagService.getID();\r\n\t\t$scope.workStation = AssetTagService.getStation();\r\n\t\t$scope.asset = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\tAssetTag.specific(assetTagID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.assetTag = data;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\tDepartment.index()\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.departments = data\r\n\t\t\t})\r\n\t\t\t.error(function(){0\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\r\n\t\t$scope.showFloors = function(){\r\n\t\t\t$scope.workstations = [];\r\n\t\t\t$scope.asset.work_station_id = null;\r\n\t\t\t$scope.asset.floor = null;\r\n\t\t\t$scope.asset.division = null;\r\n\t\t\tWorkStation.floors($scope.asset.department)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.floors = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.showDivisions = function(){\r\n\t\t\t$scope.asset.work_station_id = null;\r\n\t\t\t$scope.asset.division = null;\r\n\t\t\t$scope.workstations = [];\r\n\t\t\tWorkStation.divisions($scope.asset.department, $scope.asset.floor)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.divisions = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.showWorkStations = function(){\r\n\t\t\t$scope.asset.work_station_id = null;\r\n\t\t\t$scope.workstations = [];\r\n\t\t\tWorkStation.availableTransfer($scope.asset, $stateParams.workStationID)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.workstations = data;\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.assetTag.component_type=='Desktop'){\r\n\t\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t        .title('Would you like to include components under this unit?')\r\n\t\t\t        .content('Hard disk(s), RAM(s), video card, and softwares will be transfered along with the unit.')\r\n\t\t\t        .ok('Continue')\r\n\t\t\t        .cancel('Keep it');\r\n\t\t\t    $mdDialog.show(confirm)\r\n\t\t\t    \t.then(function() {\r\n\t\t\t\t      \tPreloader.preload();\r\n\t\t\t\t\t\tAssetTag.transfer(assetTagID, $scope.asset)\r\n\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\tAssetTag.transferComponents($stateParams.workStationID, $scope.asset)\r\n\t\t\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t    }, function() {\r\n\t\t\t\t    \tPreloader.preload();\r\n\t\t\t\t\t    AssetTag.transfer(assetTagID, $scope.asset)\r\n\t\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\t\t$state.go('main.work-station', {}, {reload:true});\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t    });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tPreloader.preload();\r\n\t\t\t\tAssetTag.transfer(assetTagID, $scope.asset)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t$mdDialog.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('transferUsersDialogController', ['$scope', '$stateParams', '$mdDialog', 'Preloader', 'EmployeeTag', 'WorkStation', 'UserService', function($scope, $stateParams, $mdDialog, Preloader, EmployeeTag, WorkStation, UserService){\r\n\t\t$scope.employee_tag = {};\r\n\t\t$scope.employee_tag.employee_tag_id = UserService.get();\r\n\r\n\t\tWorkStation.department($stateParams.departmentID, $stateParams.workStationID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.workStations = data;\r\n\t\t\t});\r\n\r\n\t\tEmployeeTag.show($scope.employee_tag.employee_tag_id)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.employee = data;\r\n\t\t\t\t$scope.employee_tag.employee_id = data.id;\r\n\t\t\t});\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tPreloader.preload();\r\n\t\t\tEmployeeTag.update($scope.employee_tag.employee_tag_id, $scope.employee_tag)\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\t//\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t})\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('usersWorkStationDialogController', ['$scope', '$stateParams', '$mdDialog', 'Preloader', 'Employee', 'AssetTagService', function($scope, $stateParams, $mdDialog, Preloader, Employee, AssetTagService){\r\n\t\t$scope.workStation = AssetTagService.getStation();\r\n\r\n\t\tEmployee.workstation($stateParams.workStationID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.show = true;\r\n\t\t\t\t$scope.employees = data;\r\n\t\t\t});\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.tag = function(){\r\n\t\t\t$mdDialog.hide();\r\n\t\t};\r\n\r\n\t\t$scope.transfer = function(id){\r\n\t\t\t$mdDialog.hide(id);\r\n\t\t}\r\n\t}]);","adminModule\r\n\t.controller('workStationContentContainerController', ['$scope', '$stateParams', '$mdDialog', 'Preloader', 'WorkStation', 'AssetTag', 'AssetTagService', 'UserService', function($scope, $stateParams, $mdDialog, Preloader, WorkStation, AssetTag, AssetTagService, UserService){\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\tvar departmentID = $stateParams.departmentID;\r\n\t\tvar workStationID = $stateParams.workStationID;\r\n\r\n\t\t$scope.subheader = {};\r\n\t\t$scope.subheader.state = 'work-station';\r\n\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\tPreloader.preload();\r\n\t\t\t$scope.show = false;\r\n\t\t\tAssetTag.workStation(workStationID)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.assets = data;\r\n\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t$scope.show = true;\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.subheader.transfer = function(){\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'transferWorkStationDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/transfer-work-station-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body'))\r\n\t\t    })\r\n\t\t};\r\n\r\n\t\t$scope.subheader.users = function(){\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'usersWorkStationDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/users-work-station-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(answer){\r\n\t\t    \tif(!answer){\r\n\t\t\t    \t$mdDialog.show({\r\n\t\t\t\t      \tcontroller: 'tagUsersWorkStationDialogController',\r\n\t\t\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/tag-users-work-station-dialog.template.html',\r\n\t\t\t\t      \tparent: angular.element($('body')),\r\n\t\t\t\t    })\r\n\t\t\t\t    .then(function(){\r\n\t\t\t\t    \t$scope.subheader.refresh();\r\n\t\t\t\t    })\r\n\t\t    \t}\r\n\t\t    \telse{\r\n\t\t    \t\tUserService.set(answer);\r\n\t\t    \t\t$mdDialog.show({\r\n\t\t\t\t      \tcontroller: 'transferUsersDialogController',\r\n\t\t\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/transfer-users-dialog.template.html',\r\n\t\t\t\t      \tparent: angular.element($('body')),\r\n\t\t\t\t    })\r\n\t\t\t\t    .then(function(){\r\n\t\t\t\t    \t$scope.subheader.refresh();\r\n\t\t\t\t    })\r\n\t\t    \t}\r\n\t\t    })\r\n\t\t};\r\n\r\n\t\tAssetTag.workStation(workStationID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.assets = data;\r\n\t\t\t\t$scope.show = true;\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\t\t/**\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Add';\r\n\t\t$scope.fab.tooltip = 'Add Asset';\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t    $mdDialog.show({\r\n\t\t      \tcontroller: 'addAssetDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-asset-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t$mdDialog.show({\r\n\t\t\t      \tcontroller: 'addAssetTagDialogController',\r\n\t\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/add-asset-tag-dialog.template.html',\r\n\t\t\t      \tparent: angular.element($('body')),\r\n\t\t\t    })\r\n\t\t\t    .then(function(){\r\n\t\t    \t\t$scope.subheader.refresh();\r\n\t\t\t    });\r\n\t\t    })\r\n\t\t};\r\n\r\n\t\t$scope.workStation = {};\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\t\t// hides right sidenav\r\n\t\t$scope.rightSidenav.show = true;\r\n\r\n\t\t/**\r\n\t\t * Status of search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.searchBar = false;\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.workStation.userInput = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t// $scope.workStation.paginated.show = false;\r\n\t\t\t// Preloader.preload()\r\n\t\t\t// WorkStation.search(departmentID, $scope.workStation)\r\n\t\t\t// \t.success(function(data){\r\n\t\t\t// \t\t$scope.workStation.results = data;\r\n\t\t\t// \t\tPreloader.stop();\r\n\t\t\t// \t})\r\n\t\t\t// \t.error(function(data){\r\n\t\t\t// \t\tPreloader.error();\r\n\t\t\t// \t});\r\n\t\t};\r\n\r\n\t\t$scope.editAsset = function(id){\r\n\t\t\tAssetTagService.setID(id);\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'editAssetDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/edit-asset-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t$scope.transferAsset = function(id){\r\n\t\t\tAssetTagService.setID(id);\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'transferAssetDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/transfer-asset-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t\t// .then(function(){\r\n\t\t //    \t$scope.subheader.refresh();\r\n\t\t //    });\r\n\t\t};\r\n\r\n\t\t$scope.swapAsset = function(id){\r\n\t\t\tAssetTagService.setID(id);\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'swapAssetDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/swap-asset-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t$scope.pullOutAsset = function(id){\r\n\t\t\tAssetTagService.setID(id);\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'pullOutAssetDialogController',\r\n\t\t\t    templateUrl: '/app/components/admin/templates/dialogs/pull-out-asset-dialog.template.html',\r\n\t\t      \tparent: angular.element($('body')),\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t$scope.subheader.refresh();\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\t$scope.removeAsset = function(id){\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t        \t.title('Delete asset from records.')\r\n\t          \t.content('Are you sure you want to delete this asset from our records?')\r\n\t          \t.ariaLabel('Delete Asset')\r\n\t          \t.ok('Delete')\r\n\t          \t.cancel('Cancel');\r\n\r\n\t        $mdDialog.show(confirm).then(function() {\r\n\t\t      \tAssetTag.delete(id)\r\n\t\t      \t\t.success(function(){\r\n\t\t      \t\t\t$scope.subheader.refresh();\r\n\t\t      \t\t})\r\n\t\t      \t\t.error(function(){\r\n\t\t      \t\t\tPreloader.error();\r\n\t\t      \t\t});\r\n\t\t    }, function() {\r\n\t\t      \treturn;\r\n\t\t    });\r\n\t\t};\r\n\t}]);\r\n","adminModule\r\n\t.controller('workStationContentController', ['$scope', '$stateParams', 'WorkStation', function($scope, $stateParams, WorkStation){\r\n\t\t\r\n\t}]);","adminModule\r\n\t.controller('workStationRightSidenavController', ['$scope', '$state', '$stateParams', 'Preloader', 'WorkStation', 'Department', function($scope, $state, $stateParams, Preloader, WorkStation, Department){\r\n\t\t/**\r\n\t\t * Object for content view\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\r\n\t\tvar departmentID = $stateParams.departmentID;\r\n\r\n\t\t$scope.rightSidenav.page = 2;\r\n\r\n\t\t// WorkStation.departmentPaginate(departmentID, $stateParams.workStationID)\r\n\t\t// \t.success(function(data){\r\n\t\t// \t\t$scope.rightSidenav.workStations = data;\r\n\t\t// \t})\r\n\t\t// \t.error(function(){\r\n\t\t// \t\tPreloader.error();\r\n\t\t// \t});\r\n\r\n\t\tWorkStation.departmentPaginate(departmentID, $stateParams.workStationID)\r\n\t\t\t.then(function(data){\r\n\t\t\t\t$scope.rightSidenav.paginated = data.data;\r\n\t\t\t\t$scope.rightSidenav.paginated.show = true;\r\n\r\n\t\t\t\t$scope.rightSidenav.paginateLoad = function(){\r\n\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\tif($scope.rightSidenav.busy || ($scope.rightSidenav.page > $scope.rightSidenav.paginated.last_page)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t *\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t$scope.rightSidenav.busy = true;\r\n\r\n\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\tWorkStation.departmentPaginate(departmentID, $stateParams.workStationID, $scope.rightSidenav.page)\r\n\t\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t$scope.rightSidenav.page++;\r\n\r\n\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\tangular.forEach(data.data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t$scope.rightSidenav.paginated.data.push(item);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t$scope.rightSidenav.busy = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, function(){\r\n\t\t\t\tPreloader.error();\r\n\t\t\t});\r\n\r\n\t\t$scope.rightSidenav.show = function(workStationID){\r\n\t\t\t$state.go('main.work-station', {'departmentID': departmentID, 'workStationID': workStationID});\r\n\t\t};\r\n\t}]);","adminModule\r\n\t.controller('workStationToolbarController', ['$scope', '$state', '$stateParams', 'departmentService', 'Department', 'WorkStation', 'AssetTagService', function($scope, $state, $stateParams, departmentService, Department, WorkStation, AssetTagService){\r\n\t\t/**\r\n\t\t *  Object for toolbar view.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t/**\r\n\t\t * Properties and method of toolbar.\r\n\t\t *\r\n\t\t*/\r\n\t\tvar departmentID = $stateParams.departmentID;\r\n\t\tvar index = departmentID - 1;\r\n\r\n\t\t$scope.toolbar.showBack = true;\r\n\r\n\t\t$scope.toolbar.back = function(){\r\n\t\t\t$state.go('main.floor-plan', {'departmentID': departmentID});\r\n\t\t};\r\n\r\n\t\tvar departments = departmentService.get();\r\n\t\tif(!departments.length){\r\n\t\t\tDepartment.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tdepartments = data;\r\n\t\t\t\t\t$scope.toolbar.parentState = departments[index].name;\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreload.error();\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$scope.toolbar.parentState = departments[index].name;\r\n\t\t}\r\n\r\n\t\tWorkStation.show($stateParams.workStationID)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.toolbar.childState = data.name;\r\n\t\t\t\tAssetTagService.setStation(data.name);\r\n\t\t\t})\r\n\t\t\t.error(function(){\r\n\t\t\t\tPreload.error();\r\n\t\t\t});\r\n\t}]);"],"sourceRoot":"/source/"}