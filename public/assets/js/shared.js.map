{"version":3,"sources":["shared.module.js","shared.routes.js","controllers/home-page.controller.js","factories/asset-detail.factory.js","factories/asset-tags.factory.js","factories/asset-type.factory.js","factories/asset.factory.js","factories/department-work-station.factory.js","factories/department.factory.js","factories/email-report.factory.js","factories/employee.factory.js","factories/user.factory.js","factories/work-station.factory.js","services/preloader.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"shared.js","sourcesContent":["var sharedModule = angular.module('sharedModule', [\r\n\t/* Vendor Dependencies */\r\n\t'ui.router',\r\n\t'ngMaterial',\r\n\t'ngMessages',\r\n\t'infinite-scroll',\r\n\t'mgcrea.ngStrap',\r\n\t'chart.js'\r\n]);","sharedModule\r\n\t.config(['$urlRouterProvider', '$stateProvider', '$mdThemingProvider', function($urlRouterProvider, $stateProvider, $mdThemingProvider){\r\n\t\t/* Defaul Theme Blue - Light Blue */\r\n\t\t$mdThemingProvider.theme('default')\r\n\t\t\t.primaryPalette('blue')\r\n\t\t\t.accentPalette('light-blue');\r\n\t\t\r\n\t\t/* Dark Theme - Blue */\r\n\t\t$mdThemingProvider.theme('dark', 'default')\r\n\t      \t.primaryPalette('blue')\r\n\t\t\t.accentPalette('light-blue')\r\n\t\t\t.dark();\r\n\r\n\t\t$mdThemingProvider.theme('dark-teal').backgroundPalette('teal').dark();\r\n\t\t$mdThemingProvider.theme('dark-orange').backgroundPalette('orange').dark();\r\n\t\t$mdThemingProvider.theme('dark-purple').backgroundPalette('deep-purple').dark();\r\n\t\t$mdThemingProvider.theme('dark-blue').backgroundPalette('blue').dark();\r\n\r\n\t\t$urlRouterProvider\r\n\t\t\t.otherwise('/page-not-found')\r\n\t\t\t.when('', '/');\r\n\r\n\t\t$stateProvider\r\n\t\t\t.state('page-not-found',{\r\n\t\t\t\turl: '/page-not-found',\r\n\t\t\t\ttemplateUrl: '/app/shared/views/page-not-found.view.html',\r\n\t\t\t})\r\n\t}]);","sharedModule\r\n\t.controller('homePageController', ['$scope', function($scope){\r\n\t\t$scope.show = function(){\r\n\t\t\tangular.element(document.querySelector('.main-view')).removeClass('hidden-custom');\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('AssetDetail', ['$http', function($http){\r\n\t\tvar urlBase = '/asset-detail';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('AssetTag', ['$http', function($http){\r\n\t\tvar urlBase = '/asset-tag';\r\n\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * Fetch all departments.\r\n\t\t\t * @return: Array of Objects\r\n\t\t\t*/\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Fetch specific department.\r\n\t\t\t * @return: Object\r\n\t\t\t*/\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase +  '/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Store single record and returns the input data for updating record.\r\n\t\t\t * @return object\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Store single record and returns the input data for updating record.\r\n\t\t\t * @return object\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tstoreMultiple: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-multiple', data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Search database tables for data\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tsearch: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-search', data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Search by component type\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tcomponentType: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-component-type', data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Search all components by work-station \r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tworkStation: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '-work-station/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/*\r\n\t\t\t * Show specific asset tag with join details on corresponding asset table\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tspecific: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '-specific/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n     \t\t * Update the specified resource in storage.\r\n     \t\t *\r\n     \t\t*/\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\r\n\t\t\t/*\r\n\t\t\t * Transfer the asset to a different work station\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\ttransfer: function(assetID, data){\r\n\t\t\t\treturn $http.put(urlBase + '-transfer/' + assetID, data);\r\n\t\t\t},\r\n\r\n\t\t\t/*\r\n\t\t\t * Set asset tag status for repair\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\trepair: function(id){\r\n\t\t\t\treturn $http.put(urlBase + '-repair/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/*\r\n\t\t\t * Set asset tag status for dispose\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tdispose: function(id){\r\n\t\t\t\treturn $http.put(urlBase + '-dispose/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/*\r\n\t\t\t * Set asset tag status for active\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tactive: function(id){\r\n\t\t\t\treturn $http.put(urlBase + '-active/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Delete the asset tag\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tdelete : function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Paginated load of resource for infinite scrolling.\r\n\t\t\t * @return: Object\r\n\t\t\t*/\r\n\t\t\tactiveUnit: function(page, data){\r\n\t\t\t\treturn $http.post(urlBase + '-active-unit?page=' + page, data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Paginated load of resource for infinite scrolling.\r\n\t\t\t * @return: Object\r\n\t\t\t*/\r\n\t\t\trepairUnit: function(page, data){\r\n\t\t\t\treturn $http.post(urlBase + '-repair-unit?page=' + page, data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Paginated load of resource for infinite scrolling.\r\n\t\t\t * @return: Object\r\n\t\t\t*/\r\n\t\t\tdisposeUnit: function(page, data){\r\n\t\t\t\treturn $http.post(urlBase + '-dispose-unit?page=' + page, data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Pull out the components when pc is pulled out.\r\n\t\t\t * \r\n\t\t\t*/\r\n\t\t\trepairComponents: function(id){\r\n\t\t\t\treturn $http.put(urlBase + '-repair-components/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Pull out the components when pc is pulled out.\r\n\t\t\t * \r\n\t\t\t*/\r\n\t\t\tdisposeComponents: function(id){\r\n\t\t\t\treturn $http.put(urlBase + '-dispose-components/' + id);\r\n\t\t\t},\r\n\t\t\tactiveComponents: function(id){\r\n\t\t\t\treturn $http.put(urlBase + '-active-components/' + id);\r\n\t\t\t},\r\n\t\t\tsearchBarcode: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-search-barcode', data);\r\n\t\t\t},\r\n\t\t\tavailableSwap: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-available-swap', data);\r\n\t\t\t},\t\r\n\t\t\tswap: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '-swap/' + id , data);\r\n\t\t\t},\r\n\t\t\ttransferComponents: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '-transfer-components/' + id, data);\r\n\t\t\t},\r\n\t\t\tswapComponents: function(id, swapID){\r\n\t\t\t\treturn $http.put(urlBase + '-swap-components/' + id + '/target/' + swapID);\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('AssetType', ['$http', function($http){\r\n\t\tvar urlBase = '/asset-type';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('Asset', ['$http', function($http){\r\n\t\tvar urlBase = '/asset';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tpaginate: function(assetTypeID, page){\r\n\t\t\t\treturn $http.get(urlBase + '-paginate/' + assetTypeID + '?page=' + page);\r\n\t\t\t},\r\n\t\t\tcheckDuplicate: function(data, id){\r\n\t\t\t\treturn $http.post(urlBase + '-check-duplicate/' + id, data);\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('DepartmentWorkStation', ['$http', function($http){\r\n\t\tvar urlBase = '/department-work-station';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('Department', ['$http', function($http){\r\n\t\tvar urlBase = '/department';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('EmailReport', ['$http', function($http){\r\n\t\tvar urlBase = '/email-report';\r\n\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * Fetch all.\r\n\t\t\t * @return: Array of Objects\r\n\t\t\t*/\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Fetch specific.\r\n\t\t\t * @return: Object\r\n\t\t\t*/\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase +  '/' + id);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Store single record and returns the input data for updating record.\r\n\t\t\t * @return object\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Update single record and returns the input data for updating record.\r\n\t\t\t * @return object\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t};\r\n\t}])","sharedModule\r\n\t.factory('Employee', ['$http', function($http){\r\n\t\tvar urlBase = '/employee';\r\n\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * Paginated load of resource for infinite scrolling.\r\n\t\t\t * @return: Object\r\n\t\t\t*/\r\n\t\t\tpaginate: function(page){\r\n\t\t\t\treturn $http.get(urlBase + '-paginate/' + '?page=' + page);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Paginated load of resource for infinite scrolling.\r\n\t\t\t * @return: Object\r\n\t\t\t*/\r\n\t\t\tpaginateDepartment: function(id, page){\r\n\t\t\t\treturn $http.get(urlBase + '-paginate/' + id + '?page=' + page);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Fetch all.\r\n\t\t\t * @return: Array of Objects\r\n\t\t\t*/\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Fetch specific.\r\n\t\t\t * @return: Object\r\n\t\t\t*/\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase +  '/' + id);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Store single record and returns the input data for updating record.\r\n\t\t\t * @return object\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Search database tables for data\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tsearch: function(id, data){\r\n\t\t\t\treturn $http.post(urlBase + '-search/' + id, data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Show employees assigned to the work station.\r\n \t\t\t *\r\n\t\t\t*/\r\n\t\t\tworkstation: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '-workstation/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Show unassigned employees by department.\r\n \t\t\t *\r\n\t\t\t*/\r\n\t\t\tdepartment: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '-department/' + id);\r\n\t\t\t},\r\n\t\t};\r\n\t}])","sharedModule\r\n\t.factory('User', ['$http', function($http){\r\n\t\tvar urlBase = '/user';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tcheckPassword: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-check-password', data);\r\n\t\t\t},\r\n\t\t\tchangePassword: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-change-password', data);\r\n\t\t\t},\r\n\t\t\tothers: function(){\r\n\t\t\t\treturn $http.get(urlBase + '-others');\r\n\t\t\t},\r\n\t\t\tresetPassword: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '-reset-password/' + id);\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('WorkStation', ['$http', function($http){\r\n\t\tvar urlBase = '/work-station';\r\n\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * Search for vacant work stations\r\n\t\t\t * @return : Array\r\n\t\t\t*/\r\n\t\t\tvacant: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-vacant', data);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Paginated load of resource for infinite scrolling.\r\n\t\t\t * @return: Array\r\n\t\t\t*/\r\n\t\t\tpaginate: function(page){\r\n\t\t\t\treturn $http.get(urlBase + '-paginate' + '?page=' + page);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Paginated load of resource for infinite scrolling.\r\n\t\t\t * @return: Array\r\n\t\t\t*/\r\n\t\t\tpaginateDepartment: function(id, page){\r\n\t\t\t\treturn $http.get(urlBase + '-paginate/' + id + '?page=' + page);\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Fetch all.\r\n\t\t\t * @return: Array of Objects\r\n\t\t\t*/\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Fetch specific.\r\n\t\t\t * @return: Object\r\n\t\t\t*/\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase +  '/' + id);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Store single record and returns the input data for updating record.\r\n\t\t\t * @return object\r\n\t\t\t *\r\n\t\t\t*/\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Search database tables for data\r\n\t\t\t * @return Array\r\n\t\t\t*/\r\n\t\t\tsearch: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-search', data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Search database tables for data by department\r\n\t\t\t * @return Array\r\n\t\t\t*/\r\n\t\t\tsearchDepartment: function(id, data){\r\n\t\t\t\treturn $http.post(urlBase + '-search/' + id, data);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t     * Search for workstation according to department id except the exisiting workstation\r\n\t\t     * @return Array\r\n\t\t    */\r\n\t\t\tdepartment: function(departmentID, workstationID){\r\n\t\t\t\treturn $http.get(urlBase + '-department/' + departmentID + '/station/' + workstationID);\r\n\t\t\t},\r\n\r\n\t\t\tdepartmentPaginate: function(departmentID, workstationID, page){\r\n\t\t\t\treturn $http.get(urlBase + '-department/' + departmentID + '/station/' + workstationID + '/paginate' + '?page=' + page);\r\n\t\t\t},\r\n\t\t\tfloors: function(departmentID){\r\n\t\t\t\treturn $http.get(urlBase + '-floors/' + departmentID);\r\n\t\t\t},\r\n\r\n\t\t\tdivisions: function(departmentID, floor){\r\n\t\t\t\treturn $http.get(urlBase + '-divisions/' + departmentID + '/floor/' + floor);\r\n\t\t\t},\r\n\r\n\t\t\tavailableTransfer: function(data, id){\r\n\t\t\t\treturn $http.post(urlBase + '-available-transfer/' + id, data);\r\n\t\t\t}\r\n\t\t};\r\n\t}])","sharedModule\r\n\t.service('Preloader', ['$mdDialog', '$mdToast', function($mdDialog, $mdToast){\r\n\t\tvar dataHolder = null;\r\n\t\tvar user = null;\r\n\r\n\t\treturn {\r\n\t\t\t/* Starts the preloader */\r\n\t\t\tloading: function(){\r\n\t\t\t\treturn $mdDialog.show({\r\n\t\t\t\t\ttemplateUrl: '/app/shared/templates/loading.html',\r\n\t\t\t\t    parent: angular.element(document.body),\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tsaving: function(){\r\n\t\t\t\treturn $mdDialog.show({\r\n\t\t\t\t\ttemplateUrl: '/app/shared/templates/saving.html',\r\n\t\t\t\t    parent: angular.element(document.body),\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t/* Stops the preloader */\r\n\t\t\tstop: function(data){\r\n\t\t\t\treturn $mdDialog.hide(data);\r\n\t\t\t},\r\n\t\t\t/* Shows error message if AJAX failed */\r\n\t\t\terror: function(){\r\n\t\t\t\treturn $mdDialog.show(\r\n\t\t\t    \t$mdDialog.alert()\r\n\t\t\t\t        .parent(angular.element($('body')))\r\n\t\t\t\t        .clickOutsideToClose(true)\r\n\t\t\t\t        .title('Oops! Something went wrong!')\r\n\t\t\t\t        .content('An error occured. Please contact administrator for assistance.')\r\n\t\t\t\t        .ariaLabel('Error Message')\r\n\t\t\t\t        .ok('Got it!')\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\terrorMessage: function(data){\r\n\t\t\t\treturn $mdDialog.show({\r\n\t\t\t\t    controller: 'errorMessageController',\r\n\t\t\t\t    templateUrl: '/app/shared/templates/dialogs/error-message.template.html',\r\n\t\t\t\t    parent: angular.element(document.body),\r\n\t\t\t\t    clickOutsideToClose:true,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t/* Send temporary data for retrival */\r\n\t\t\tset: function(data){\r\n\t\t\t\tdataHolder = data;\r\n\t\t\t},\r\n\t\t\t/* Retrieves data */\r\n\t\t\tget: function(){\r\n\t\t\t\treturn dataHolder;\r\n\t\t\t},\r\n\t\t\t/* Set User */\r\n\t\t\tsetUser: function(data){\r\n\t\t\t\tuser = data;\r\n\t\t\t},\r\n\t\t\t/* Get User */\r\n\t\t\tgetUser: function(data){\r\n\t\t\t\treturn user;\r\n\t\t\t},\r\n\t\t\ttoastChangesSaved: function(){\r\n\t\t\t\treturn $mdToast.show(\r\n\t\t\t    \t$mdToast.simple()\r\n\t\t\t\t        .textContent('Changes saved.')\r\n\t\t\t\t        .position('bottom right')\r\n\t\t\t\t        .hideDelay(3000)\r\n\t\t\t    );\r\n\t\t\t},\r\n\t\t\tdeleted: function(){\r\n\t\t\t\treturn $mdToast.show(\r\n\t\t\t    \t$mdToast.simple()\r\n\t\t\t\t        .textContent('Deleted')\r\n\t\t\t\t        .position('bottom right')\r\n\t\t\t\t        .hideDelay(3000)\r\n\t\t\t    );\r\n\t\t\t},\r\n\t\t};\r\n\t}]);"],"sourceRoot":"/source/"}